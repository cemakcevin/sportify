{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/GamePage/GamePage.js\";\nimport './GamePage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport VideoMain from '../../components/VideoMain/VideoMain';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport VideoBox from '../../components/VideoBox/VideoBox';\nimport videoWatchToEmbed from '../../functions/videoWatchToEmbed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localUrl = \"http://localhost:8686\";\n\nclass GamePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strVideo: \"\",\n      currentEvent: {},\n      pastLeagueEvents: [],\n      videoComments: []\n    };\n  }\n\n  componentDidMount() {\n    const videoId = this.props.match.params.videoId;\n    const token = sessionStorage.getItem(\"token\");\n    axios.all([axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId), axios.get(localUrl + \"/comments/game/\" + videoId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })]).then(axios.spread((responseEvent, responseComments) => {\n      const currentEvent = responseEvent.data.events[0];\n      const videoComments = responseComments.data;\n      const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo);\n      const leagueId = currentEvent.idLeague;\n\n      if (videoComments) {\n        this.setState({\n          strVideo: strVideo,\n          currentEvent: currentEvent,\n          videoComments: videoComments\n        });\n      } else {\n        this.setState({\n          strVideo: strVideo,\n          currentEvent: currentEvent\n        });\n      }\n\n      return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId);\n    })).then(response => {\n      const pastLeagueEvents = response.data.events;\n      this.setState({\n        pastLeagueEvents: pastLeagueEvents\n      });\n    });\n  }\n\n  taskAddComment(event) {}\n\n  render() {\n    const {\n      strVideo,\n      currentEvent,\n      pastLeagueEvents,\n      videoComments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(VideoMain, {\n        className: \"game__video\",\n        videoSrc: strVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"game__info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game__info-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n            className: \"game__video-info\",\n            currentEvent: currentEvent,\n            comments: videoComments,\n            taskAddComment: this.taskAddComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game__side-videos-container\",\n            children: pastLeagueEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(VideoBox, {\n                className: \"game__side-video\",\n                videoSrc: event.strVideo,\n                videoName: event.strFilename\n              }, event.idEvent, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GamePage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/GamePage/GamePage.js"],"names":["React","axios","VideoMain","VideoInfo","VideoBox","videoWatchToEmbed","localUrl","GamePage","Component","state","strVideo","currentEvent","pastLeagueEvents","videoComments","componentDidMount","videoId","props","match","params","token","sessionStorage","getItem","all","get","headers","Authorization","then","spread","responseEvent","responseComments","data","events","leagueId","idLeague","setState","response","taskAddComment","event","render","map","strFilename","idEvent"],"mappings":"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","sourcesContent":["import './GamePage.scss';\nimport React from 'react';\nimport axios from 'axios';\n\nimport VideoMain from '../../components/VideoMain/VideoMain';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport VideoBox from '../../components/VideoBox/VideoBox';\n\nimport videoWatchToEmbed from '../../functions/videoWatchToEmbed';\n\nconst localUrl = \"http://localhost:8686\";\n\nclass GamePage extends React.Component {\n\n    state = {\n        strVideo: \"\",\n        currentEvent: {},\n        pastLeagueEvents: [],\n        videoComments:[]\n    }\n\n    componentDidMount() {\n        const videoId = this.props.match.params.videoId;\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.all([\n            axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId),\n            axios.get(localUrl + \"/comments/game/\" + videoId, {headers: {Authorization: `Bearer ${token}`}})   \n        ])\n        .then(axios.spread((responseEvent, responseComments) => {\n            \n            const currentEvent = responseEvent.data.events[0];\n            const videoComments = responseComments.data;\n            const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo)\n            const leagueId = currentEvent.idLeague;\n\n            if(videoComments) {\n                this.setState({\n                    strVideo: strVideo,\n                    currentEvent: currentEvent,\n                    videoComments: videoComments\n                })\n            }\n            else {\n                this.setState({\n                    strVideo: strVideo,\n                    currentEvent: currentEvent,\n                })\n            }\n            \n\n            return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId)\n        }))\n        .then(response => {\n            const pastLeagueEvents = response.data.events;\n\n            this.setState({\n                pastLeagueEvents: pastLeagueEvents\n            })\n        })\n    }\n\n    taskAddComment(event) {\n\n    }\n\n    render () {\n\n        const {strVideo, currentEvent, pastLeagueEvents, videoComments} = this.state;\n\n        return (\n            <main className=\"game\">\n                <VideoMain \n                    className=\"game__video\"\n                    videoSrc={strVideo}\n                />\n                <section className=\"game__info\">\n                    <div className=\"game__info-wrapper\">\n                        <VideoInfo \n                            className=\"game__video-info\" \n                            currentEvent={currentEvent}\n                            comments={videoComments}\n                            taskAddComment={this.taskAddComment}\n                        />\n                        <div className=\"game__side-videos-container\">\n                        {pastLeagueEvents.map(event => {\n                            return(\n                                <VideoBox \n                                    key={event.idEvent}\n                                    className=\"game__side-video\"\n                                    videoSrc={event.strVideo} \n                                    videoName={event.strFilename}\n                                />)\n                        })}\n                    </div>\n                    </div>\n                </section>  \n            </main>\n        )\n    }\n}\n\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}