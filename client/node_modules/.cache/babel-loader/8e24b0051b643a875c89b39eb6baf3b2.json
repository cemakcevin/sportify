{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/HomePage/HomePage.js\";\nimport './HomePage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\nimport timeDifference from '../../functions/timeDifference';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API__KEY = \"dd7ed4159ce8b1df6d8cbadaa67c7cdf\";\nconst localUrl = \"http://localhost:8686\";\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      favouriteTeams: [],\n      selectedTeam: null,\n      detailsEnabled: false,\n      pastEvents: [],\n      articles: [],\n      profileInfo: {},\n      friends: [],\n      requests: [],\n      feed: [],\n      feedComments: []\n    };\n\n    this.taskDisplayTeam = teamId => {\n      axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId).then(response => {\n        const selectedTeam = response.data.teams[0];\n        this.setState({\n          selectedTeam: selectedTeam,\n          detailsEnabled: true\n        });\n      });\n    };\n\n    this.taskEndDisplayTeam = () => {\n      this.setState({\n        detailsEnabled: false\n      });\n    };\n\n    this.taskUpdateFavourites = () => {\n      const token = sessionStorage.getItem(\"token\");\n      axios.get(localUrl + \"/favourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.data) {\n          this.setState({\n            favouriteTeams: response.data\n          });\n        } else {\n          this.setState({\n            favouriteTeams: []\n          });\n        }\n      });\n    };\n\n    this.taskAddPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentType = \"comment\";\n      const userId = '';\n      const commentData = {\n        userId,\n        commentText,\n        contentType\n      };\n      axios.post(localUrl + \"/feed\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          feed: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskAddCommentToPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentId = event.target.contentId.value;\n      const contentType = event.target.contentType.value;\n      const receiverId = event.target.receiverId.value;\n      const feedCommentData = {\n        contentId,\n        contentType,\n        commentText,\n        receiverId\n      };\n      axios.post(localUrl + \"/comments\", feedCommentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        return axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          feedComments: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskTakeToGamePage = idEvent => {\n      this.props.history.push('/game/' + idEvent);\n    };\n  }\n\n  componentDidMount() {\n    this.props.taskUpdateUrl(this.props.match.url);\n    console.log(\"component did mount\");\n    const token = sessionStorage.getItem(\"token\");\n    axios.all([axios.get(localUrl + \"/favourites\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/friends\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/requests\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })]).then(axios.spread((favouritesResponse, profileResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse) => {\n      if (favouritesResponse.data) {\n        this.setState({\n          favouriteTeams: favouritesResponse.data,\n          profileInfo: profileResponse.data,\n          friends: friendsResponse.data,\n          requests: requestsResponse.data,\n          feed: feedResponse.data,\n          feedComments: feedCommentsResponse.data\n        });\n      } else {\n        this.setState({\n          profileInfo: profileResponse.data,\n          friends: friendsResponse.data,\n          requests: requestsResponse.data,\n          feed: feedResponse.data,\n          feedComments: feedCommentsResponse.data\n        });\n      }\n    }));\n  }\n\n  componentDidUpdate() {\n    const {\n      index,\n      favouriteTeams,\n      pastEvents,\n      articles\n    } = this.state;\n\n    if (index < favouriteTeams.length) {\n      const teamId = favouriteTeams[index].idTeam;\n      const teamName = favouriteTeams[index].strTeam;\n      setTimeout(axios.all([axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId), axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n        let newPastEvents = pastEventsResponse.data.results;\n        let newArticles = teamNewsResponse.data.articles;\n        newPastEvents = newPastEvents.map(event => {\n          const {\n            strHomeTeam,\n            strAwayTeam,\n            intHomeScore,\n            intAwayScore,\n            dateEvent,\n            strVideo,\n            strFilename\n          } = event;\n          return {\n            strHomeTeam,\n            strAwayTeam,\n            intHomeScore,\n            intAwayScore,\n            dateEvent,\n            strVideo,\n            strFilename\n          };\n        });\n        newArticles = newArticles.map(article => {\n          const {\n            title,\n            image,\n            url\n          } = article;\n          return {\n            title,\n            image,\n            url\n          };\n        });\n        this.setState({\n          index: index + 1,\n          pastEvents: [...pastEvents, ...newPastEvents],\n          articles: [...articles, ...newArticles]\n        });\n      })), 1000);\n    }\n  }\n\n  render() {\n    const {\n      favouriteTeams,\n      selectedTeam,\n      detailsEnabled,\n      pastEvents,\n      articles,\n      profileInfo,\n      friends,\n      requests,\n      feed,\n      feedComments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__profile profile\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"profile__avatar\",\n          avatarUrl: profileInfo.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile__name\",\n            children: [profileInfo.name, \" \", profileInfo.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__date\",\n            children: [\"Joined \", timeDifference(profileInfo.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: profileInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: homeIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"Lives in \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: locationIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__interaction interaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interaction__favourites\",\n          children: favouriteTeams.map(team => {\n            return /*#__PURE__*/_jsxDEV(TeamCard, {\n              className: \"interaction__fav-card\",\n              taskDisplayTeam: this.taskDisplayTeam,\n              strTeamBadge: team.strTeamBadge,\n              teamId: team.idTeam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interaction__feed-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction__feed feed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feed__card\",\n              children: /*#__PURE__*/_jsxDEV(FeedForm, {\n                className: \"feed__form\",\n                onSubmit: this.taskAddPost,\n                profileUrl: profileInfo.imgUrl,\n                feedTitle: \"Your Feed\",\n                placeholder: \"Tell us what is top of mind for you...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), feed.map(feedContent => {\n              return /*#__PURE__*/_jsxDEV(FeedCard, {\n                className: \"feed__card\",\n                feedContent: feedContent,\n                feedComments: feedComments,\n                taskTakeToGamePage: this.taskTakeToGamePage,\n                taskAddCommentToPost: this.taskAddCommentToPost,\n                userAvatar: profileInfo.imgUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__updates updates\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updates__container\",\n          children: pastEvents.map(event => {\n            return /*#__PURE__*/_jsxDEV(EventScore, {\n              event: event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updates__container\",\n          children: articles.map(article => {\n            return /*#__PURE__*/_jsxDEV(NewsArticle, {\n              className: \"team__news-article\",\n              newsArticle: article\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__friends friends\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friends__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friends__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"friends__title\",\n              children: \"Friends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), friends.map(friend => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/user/\" + friend.friendId,\n                children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                  className: \"friends__avatar\",\n                  imgSrc: friend.imgUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 41\n                }, this)\n              }, friend.friendId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friends__request-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"friends__title\",\n              children: \"Requests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), requests.map(request => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/user/\" + request.requestorId,\n                children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                  className: \"friends__avatar\",\n                  imgSrc: request.imgUrl\n                }, request.requestorId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 41\n                }, this)\n              }, request.requestorId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), detailsEnabled && /*#__PURE__*/_jsxDEV(TeamDetails, {\n        team: selectedTeam,\n        taskEndDisplayTeam: this.taskEndDisplayTeam,\n        taskUpdateFavourites: this.taskUpdateFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/HomePage/HomePage.js"],"names":["React","axios","Link","Avatar","TeamCard","TeamDetails","EventScore","NewsArticle","ProfileImage","FeedForm","FeedCard","homeIcon","locationIcon","timeDifference","API__KEY","localUrl","HomePage","Component","state","index","favouriteTeams","selectedTeam","detailsEnabled","pastEvents","articles","profileInfo","friends","requests","feed","feedComments","taskDisplayTeam","teamId","get","then","response","data","teams","setState","taskEndDisplayTeam","taskUpdateFavourites","token","sessionStorage","getItem","headers","Authorization","taskAddPost","event","preventDefault","commentText","target","value","contentType","userId","commentData","post","reset","taskAddCommentToPost","contentId","receiverId","feedCommentData","_response","taskTakeToGamePage","idEvent","props","history","push","componentDidMount","taskUpdateUrl","match","url","console","log","all","spread","favouritesResponse","profileResponse","friendsResponse","requestsResponse","feedResponse","feedCommentsResponse","componentDidUpdate","length","idTeam","teamName","strTeam","setTimeout","pastEventsResponse","teamNewsResponse","newPastEvents","results","newArticles","map","strHomeTeam","strAwayTeam","intHomeScore","intAwayScore","dateEvent","strVideo","strFilename","article","title","image","render","imgUrl","name","lastName","timestamp","description","location","from","team","strTeamBadge","feedContent","friend","friendId","request","requestorId"],"mappings":"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","sourcesContent":["import './HomePage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\n\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\n\nimport timeDifference from '../../functions/timeDifference';\n\nconst API__KEY=\"dd7ed4159ce8b1df6d8cbadaa67c7cdf\";\nconst localUrl = \"http://localhost:8686\";\n\n\nclass HomePage extends React.Component {\n\n\n    state = {\n        index: 0,\n        favouriteTeams:[],\n        selectedTeam: null,\n        detailsEnabled: false,\n        pastEvents: [],\n        articles: [],\n        profileInfo: {},\n        friends: [],\n        requests: [],\n        feed: [],\n        feedComments: []\n    }\n\n    componentDidMount() {\n        this.props.taskUpdateUrl(this.props.match.url);\n        console.log(\"component did mount\")\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.all([\n            axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/friends\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n        ])\n        .then(axios.spread((favouritesResponse, profileResponse, friendsResponse, \n            requestsResponse, feedResponse, feedCommentsResponse)=> {\n\n            if(favouritesResponse.data){\n                this.setState({\n                    favouriteTeams: favouritesResponse.data,\n                    profileInfo: profileResponse.data,\n                    friends: friendsResponse.data,\n                    requests: requestsResponse.data,\n                    feed: feedResponse.data,\n                    feedComments: feedCommentsResponse.data\n                })\n            }\n            else {\n                this.setState({\n                    profileInfo: profileResponse.data,\n                    friends: friendsResponse.data,\n                    requests: requestsResponse.data,\n                    feed: feedResponse.data,\n                    feedComments: feedCommentsResponse.data\n                })\n            }  \n        }))\n    }\n\n    componentDidUpdate() {\n        const {index, favouriteTeams, pastEvents, articles} = this.state;\n\n        if(index < favouriteTeams.length) {\n\n            const teamId = favouriteTeams[index].idTeam;\n            const teamName = favouriteTeams[index].strTeam;\n\n            setTimeout(axios.all([\n                axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n                axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n            ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n\n                let newPastEvents = pastEventsResponse.data.results;\n                let newArticles = teamNewsResponse.data.articles;\n\n                newPastEvents = newPastEvents.map(event => {\n                    const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n                    return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n                })\n\n                newArticles = newArticles.map(article => {\n                    const {title, image, url} = article;\n                    return {title, image, url};\n                })\n                \n                this.setState({\n                    index: index + 1,\n                    pastEvents: [...pastEvents, ...newPastEvents],\n                    articles: [...articles, ...newArticles]\n                })\n            })) ,1000)\n            \n\n        }\n        \n        \n        \n    }\n\n    taskDisplayTeam = (teamId) => {\n        axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId)\n        .then(response => {\n            const selectedTeam = response.data.teams[0];\n\n            this.setState({\n                selectedTeam: selectedTeam,\n                detailsEnabled: true\n            })\n        })\n    }\n\n    taskEndDisplayTeam = () => {\n        \n        this.setState({\n            detailsEnabled: false\n        })\n    }\n\n    taskUpdateFavourites = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            \n            if(response.data){\n                this.setState({\n                    favouriteTeams: response.data\n                })\n            }\n            else {\n                this.setState({\n                    favouriteTeams: []\n                })\n            } \n\n        })\n    }\n\n    taskAddPost = (event) => {\n\n        event.preventDefault();\n    \n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentType = \"comment\";\n        const userId = '';\n        \n        const commentData = {\n            userId, \n            commentText, \n            contentType\n        }\n        \n        axios.post(localUrl + \"/feed\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            this.setState({\n                feed: response.data\n            }, () => {\n                event.target.reset();\n            })\n        })\n\n    }\n\n    taskAddCommentToPost = (event) => {\n\n        event.preventDefault();\n\n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentId = event.target.contentId.value;\n        const contentType = event.target.contentType.value;\n        const receiverId = event.target.receiverId.value;\n\n        const feedCommentData = {\n            contentId, \n            contentType, \n            commentText, \n            receiverId\n        }\n\n        axios.post(localUrl + \"/comments\", feedCommentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            return axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n        })\n        .then(response => {\n\n            this.setState({\n                feedComments: response.data\n            }, () => {\n\n                event.target.reset();\n            })\n        })\n    }\n\n    taskTakeToGamePage = (idEvent) => {\n\n        this.props.history.push('/game/' + idEvent);\n    }\n\n    render () {\n\n        const {favouriteTeams, selectedTeam, detailsEnabled, \n            pastEvents, articles, profileInfo, friends, requests,\n            feed, feedComments} = this.state;\n\n        return(\n            <main className=\"home\">\n                <div className=\"home__profile profile\">\n                    <Avatar \n                        className=\"profile__avatar\" \n                        avatarUrl={profileInfo.imgUrl} \n                    />\n                    <div className=\"profile__info\">\n                        <h3 className=\"profile__name\">{profileInfo.name} {profileInfo.lastName}</h3>\n                        <p className=\"profile__date\">Joined {timeDifference(profileInfo.timestamp)}</p>\n                        <p className=\"profile__description\">{profileInfo.description}</p>\n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={homeIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">Lives in <span className=\"profile__bold\">{profileInfo.location}</span></p>\n                        </div> \n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={locationIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">From <span className=\"profile__bold\">{profileInfo.from}</span></p>\n                        </div> \n                    </div>\n                </div>\n                <div className=\"home__interaction interaction\">\n                    <div className=\"interaction__favourites\">\n                        {favouriteTeams.map(team => {\n                            return (\n                                <TeamCard \n                                    className=\"interaction__fav-card\" \n                                    taskDisplayTeam={this.taskDisplayTeam}\n                                    strTeamBadge={team.strTeamBadge}\n                                    teamId={team.idTeam} \n                                />\n                            )\n                        })} \n                    </div>\n                    <div className=\"interaction__feed-container\">\n                        <div className=\"interaction__feed feed\">\n                            <div className=\"feed__card\">\n                                <FeedForm \n                                    className=\"feed__form\"\n                                    onSubmit={this.taskAddPost}\n                                    profileUrl={profileInfo.imgUrl}\n                                    feedTitle=\"Your Feed\"\n                                    placeholder=\"Tell us what is top of mind for you...\"\n                                />\n                            </div>\n                            {feed.map(feedContent => {\n                                return (\n                                    <FeedCard \n                                        className=\"feed__card\"\n                                        feedContent={feedContent}\n                                        feedComments={feedComments}\n                                        taskTakeToGamePage={this.taskTakeToGamePage}\n                                        taskAddCommentToPost={this.taskAddCommentToPost}\n                                        userAvatar={profileInfo.imgUrl}\n                                    />\n                                )\n                            })}\n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"home__updates updates\">\n                    <div className=\"updates__container\">\n                        {pastEvents.map(event => {\n                            return <EventScore event={event} />\n                        })}\n                    </div>\n                    <div className=\"updates__container\">\n                        {articles.map(article => {\n                            return (\n                                <NewsArticle \n                                    className=\"team__news-article\" \n                                    newsArticle={article} \n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"home__friends friends\">\n                    <div className=\"friends__wrapper\">\n                        <div className=\"friends__container\">\n                            <h3 className=\"friends__title\">Friends</h3>\n                            {friends.map(friend => {\n                                return(\n                                    <Link key={friend.friendId} to={\"/user/\" + friend.friendId}>\n                                        <ProfileImage \n                                            className=\"friends__avatar\"\n                                            imgSrc={friend.imgUrl}\n                                        />\n                                    </Link>\n                                )\n                            })}\n                        </div>\n                        <div className=\"friends__request-container\">\n                            <h3 className=\"friends__title\">Requests</h3>\n                            {requests.map(request => {\n                                return(\n                                    <Link key={request.requestorId} to={\"/user/\" + request.requestorId}>\n                                        <ProfileImage \n                                            key={request.requestorId}\n                                            className=\"friends__avatar\"\n                                            imgSrc={request.imgUrl}\n                                        />\n                                    </Link>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                {detailsEnabled && \n                    <TeamDetails \n                        team={selectedTeam} \n                        taskEndDisplayTeam={this.taskEndDisplayTeam}\n                        taskUpdateFavourites={this.taskUpdateFavourites}\n                    />\n                }\n            </main>\n        )\n    }\n    \n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}