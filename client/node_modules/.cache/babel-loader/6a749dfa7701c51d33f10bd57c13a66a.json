{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/UserPage/UserPage.js\";\nimport './UserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API__KEY = \"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\nclass UserPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      favouriteTeams: [],\n      selectedTeam: null,\n      detailsEnabled: false,\n      pastEvents: [],\n      articles: [],\n      profileInfo: {},\n      friends: [],\n      isFriend: null,\n      isRequestSent: false,\n      isRequestReceived: false,\n      feed: []\n    };\n\n    this.taskDisplayTeam = teamId => {\n      axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId).then(response => {\n        const selectedTeam = response.data.teams[0];\n        this.setState({\n          selectedTeam: selectedTeam,\n          detailsEnabled: true\n        });\n      });\n    };\n\n    this.taskEndDisplayTeam = () => {\n      this.setState({\n        detailsEnabled: false\n      });\n    };\n\n    this.taskUpdateFavourites = () => {\n      const token = sessionStorage.getItem(\"token\");\n      axios.get(localUrl + \"/favourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.data) {\n          this.setState({\n            favouriteTeams: response.data\n          });\n        } else {\n          this.setState({\n            favouriteTeams: []\n          });\n        }\n      });\n    };\n\n    this.taskSendFriendRequest = () => {\n      const token = sessionStorage.getItem(\"token\");\n      const userId = this.props.match.params.userId;\n      axios.post(localUrl + '/requests', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isRequestSent: true\n        });\n      });\n    };\n\n    this.taskAcceptFriendRequest = () => {\n      const token = sessionStorage.getItem(\"token\");\n      const requestorId = this.props.match.params.userId;\n      axios.post(localUrl + '/requests/acceptRequest', {\n        requestorId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isFriend: true\n        });\n      });\n    };\n\n    this.taskAddPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentType = \"comment\";\n      const userId = this.props.match.params.userId;\n      const commentData = {\n        userId,\n        commentText,\n        contentType\n      };\n      axios.post(localUrl + \"/feed\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          feed: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskTakeToGamePage = () => {};\n  }\n\n  componentDidMount() {\n    const token = sessionStorage.getItem(\"token\");\n    const userId = this.props.match.params.userId;\n    axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/users/\" + userId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/friends/\" + userId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/feed/\" + userId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })]).then(axios.spread((favouritesResponse, profileResponse, friendsResponse, feedResponse) => {\n      if (favouritesResponse.data) {\n        this.setState({\n          favouriteTeams: favouritesResponse.data,\n          profileInfo: profileResponse.data,\n          friends: friendsResponse.data,\n          feed: feedResponse.data\n        });\n      } else {\n        this.setState({\n          profileInfo: profileResponse.data,\n          friends: friendsResponse.data,\n          feed: feedResponse.data\n        });\n      }\n\n      return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n    })).then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n      console.log(isFriendResponse, isSentResponse, isRecievedResponse);\n      this.setState({\n        isFriend: isFriendResponse.data.isFriend,\n        isRequestSent: isSentResponse.data.isRequestSent,\n        isRequestReceived: isRecievedResponse.data.isRequestReceived\n      });\n    })).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      index,\n      favouriteTeams,\n      pastEvents,\n      articles\n    } = this.state;\n    console.log(index);\n\n    if (index < favouriteTeams.length) {\n      const teamId = favouriteTeams[index].idTeam;\n      const teamName = favouriteTeams[index].strTeam;\n      setTimeout(axios.all([axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId), axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n        let newPastEvents = pastEventsResponse.data.results;\n        let newArticles = teamNewsResponse.data.articles;\n        newPastEvents = newPastEvents.map(event => {\n          const {\n            strHomeTeam,\n            strAwayTeam,\n            intHomeScore,\n            intAwayScore,\n            dateEvent,\n            strVideo,\n            strFilename\n          } = event;\n          return {\n            strHomeTeam,\n            strAwayTeam,\n            intHomeScore,\n            intAwayScore,\n            dateEvent,\n            strVideo,\n            strFilename\n          };\n        });\n        newArticles = newArticles.map(article => {\n          const {\n            title,\n            image,\n            url\n          } = article;\n          return {\n            title,\n            image,\n            url\n          };\n        }); // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n        // const {title, image, url} = teamNewsResponse.data.articles;\n        // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n        // const newArticles = {title, image, url};\n\n        this.setState({\n          index: index + 1,\n          pastEvents: [...pastEvents, ...newPastEvents],\n          articles: [...articles, ...newArticles]\n        });\n      })), 1000);\n    }\n  }\n\n  render() {\n    const {\n      favouriteTeams,\n      selectedTeam,\n      detailsEnabled,\n      pastEvents,\n      articles,\n      profileInfo,\n      friends,\n      isFriend,\n      isRequestSent,\n      isRequestReceived,\n      feed\n    } = this.state;\n    console.log(isFriend);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"user-profile__avatar\",\n          avatarUrl: profileInfo.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Just Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile__info-buttons\",\n            children: isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(IsFriend, {\n              className: \"\",\n              isFriend: isFriend,\n              isRequestSent: isRequestSent,\n              isRequestReceived: isRequestReceived,\n              taskSendFriendRequest: this.taskSendFriendRequest,\n              taskAcceptFriendRequest: this.taskAcceptFriendRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this) : isFriend === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__interaction user-interaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction__favourites\",\n            children: favouriteTeams.map(team => {\n              return /*#__PURE__*/_jsxDEV(TeamCard, {\n                className: \"user-interaction__fav-card\",\n                taskDisplayTeam: this.taskDisplayTeam,\n                strTeamBadge: team.strTeamBadge,\n                teamId: team.idTeam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-interaction__feed-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-interaction__feed feed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed__card\",\n                children: /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: profileInfo.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `Write something to ${profileInfo.name}...`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 41\n              }, this), feed.map(feedContent => {\n                return /*#__PURE__*/_jsxDEV(FeedCard, {\n                  className: \"feed__card\",\n                  feedContent: feedContent,\n                  taskTakeToGamePage: this.taskTakeToGamePage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__updates user-updates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: pastEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(EventScore, {\n                event: event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: articles.map(article => {\n              return /*#__PURE__*/_jsxDEV(NewsArticle, {\n                className: \"team__news-article\",\n                newsArticle: article\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__friends user-friends\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-friends__wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-friends__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 41\n              }, this), friends.map(friend => {\n                return /*#__PURE__*/_jsxDEV(ProfileImage, {\n                  className: \"user-friends__avatar\",\n                  imgSrc: friend.imgUrl\n                }, friend.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }, this), detailsEnabled && /*#__PURE__*/_jsxDEV(TeamDetails, {\n          team: selectedTeam,\n          taskEndDisplayTeam: this.taskEndDisplayTeam,\n          taskUpdateFavourites: this.taskUpdateFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__private user-private\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-private__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"user-private__img\",\n            src: lockIcon,\n            alt: \"lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-private__card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"user-private__title\",\n              children: \"This Account is Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-private__text\",\n              children: \"Send a friend request to this account to see their details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/UserPage/UserPage.js"],"names":["React","axios","Avatar","TeamCard","TeamDetails","EventScore","NewsArticle","ProfileImage","IsFriend","FeedForm","FeedCard","lockIcon","API__KEY","localUrl","UserPage","Component","state","index","favouriteTeams","selectedTeam","detailsEnabled","pastEvents","articles","profileInfo","friends","isFriend","isRequestSent","isRequestReceived","feed","taskDisplayTeam","teamId","get","then","response","data","teams","setState","taskEndDisplayTeam","taskUpdateFavourites","token","sessionStorage","getItem","headers","Authorization","taskSendFriendRequest","userId","props","match","params","post","_response","taskAcceptFriendRequest","requestorId","taskAddPost","event","preventDefault","commentText","target","value","contentType","commentData","reset","taskTakeToGamePage","componentDidMount","all","spread","favouritesResponse","profileResponse","friendsResponse","feedResponse","isFriendResponse","isSentResponse","isRecievedResponse","console","log","catch","error","componentDidUpdate","length","idTeam","teamName","strTeam","setTimeout","pastEventsResponse","teamNewsResponse","newPastEvents","results","newArticles","map","strHomeTeam","strAwayTeam","intHomeScore","intAwayScore","dateEvent","strVideo","strFilename","article","title","image","url","render","imgUrl","team","strTeamBadge","name","feedContent","friend"],"mappings":"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","sourcesContent":["import './UserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\n\nimport lockIcon from '../../assets/icons/lock-icon.png';\n\n\nconst API__KEY=\"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\n\nclass UserPage extends React.Component {\n\n\n    state = {\n        index: 0,\n        favouriteTeams:[],\n        selectedTeam: null,\n        detailsEnabled: false,\n        pastEvents: [],\n        articles: [],\n        profileInfo: {},\n        friends: [],\n        isFriend: null,\n        isRequestSent: false,\n        isRequestReceived: false,\n        feed: []\n    }\n\n    componentDidMount() {\n        const token = sessionStorage.getItem(\"token\");\n        const userId = this.props.match.params.userId;\n\n        axios.all([\n            axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n        ])\n        .then(axios.spread((favouritesResponse, profileResponse, friendsResponse, feedResponse)=> {\n            if(favouritesResponse.data){\n                this.setState({\n                    favouriteTeams: favouritesResponse.data,\n                    profileInfo: profileResponse.data,\n                    friends: friendsResponse.data,\n                    feed: feedResponse.data\n                })\n            }\n            else {\n                this.setState({\n                    profileInfo: profileResponse.data,\n                    friends: friendsResponse.data,\n                    feed: feedResponse.data\n                })\n                \n            } \n        \n            return axios.all([\n                axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n            ])\n        }))\n        .then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n            console.log(isFriendResponse, isSentResponse, isRecievedResponse);\n\n            this.setState({\n                isFriend: isFriendResponse.data.isFriend,\n                isRequestSent: isSentResponse.data.isRequestSent,\n                isRequestReceived: isRecievedResponse.data.isRequestReceived\n            })\n        }))\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    componentDidUpdate() {\n        const {index, favouriteTeams, pastEvents, articles} = this.state;\n\n        console.log(index)\n        if(index < favouriteTeams.length) {\n\n            const teamId = favouriteTeams[index].idTeam;\n            const teamName = favouriteTeams[index].strTeam;\n\n            setTimeout(axios.all([\n                axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n                axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n            ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n\n                let newPastEvents = pastEventsResponse.data.results;\n                let newArticles = teamNewsResponse.data.articles;\n\n                newPastEvents = newPastEvents.map(event => {\n                    const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n                    return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n                })\n\n                newArticles = newArticles.map(article => {\n                    const {title, image, url} = article;\n                    return {title, image, url};\n                })\n\n                // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n                // const {title, image, url} = teamNewsResponse.data.articles;\n\n                // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n                // const newArticles = {title, image, url};\n\n                this.setState({\n                    index: index + 1,\n                    pastEvents: [...pastEvents, ...newPastEvents],\n                    articles: [...articles, ...newArticles]\n                })\n            })) ,1000)\n            \n\n        }\n        \n        \n        \n    }\n\n    taskDisplayTeam = (teamId) => {\n        axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId)\n        .then(response => {\n            const selectedTeam = response.data.teams[0];\n\n            this.setState({\n                selectedTeam: selectedTeam,\n                detailsEnabled: true\n            })\n        })\n    }\n\n    taskEndDisplayTeam = () => {\n        \n        this.setState({\n            detailsEnabled: false\n        })\n    }\n\n    taskUpdateFavourites = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            \n            if(response.data){\n                this.setState({\n                    favouriteTeams: response.data\n                })\n            }\n            else {\n                this.setState({\n                    favouriteTeams: []\n                })\n            } \n\n        })\n    }\n\n    taskSendFriendRequest = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = this.props.match.params.userId;\n\n        axios.post(localUrl + '/requests', {userId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n            \n            this.setState({\n                isRequestSent: true\n            })\n        })\n    }\n\n    taskAcceptFriendRequest = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n        const requestorId = this.props.match.params.userId;\n\n        axios.post(localUrl + '/requests/acceptRequest', {requestorId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            this.setState({\n                isFriend: true\n            })\n        })\n    }\n\n    taskAddPost = (event) => {\n\n        event.preventDefault();\n    \n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentType = \"comment\";\n        const userId = this.props.match.params.userId;\n        \n        const commentData = {\n            userId, \n            commentText, \n            contentType\n        }\n        \n        axios.post(localUrl + \"/feed\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            this.setState({\n                feed: response.data\n            }, () => {\n                event.target.reset();\n            })\n        })\n\n    }\n\n    taskTakeToGamePage = () => {\n\n    }\n\n    render () {\n\n        const {favouriteTeams, selectedTeam, detailsEnabled, \n            pastEvents, articles, profileInfo, friends, isFriend, \n            isRequestSent, isRequestReceived, feed} = this.state;\n\n\n            console.log(isFriend);\n\n        return(\n            <main className=\"user\">\n                <div className=\"user__profile user-profile\">\n                    <Avatar \n                        className=\"user-profile__avatar\" \n                        avatarUrl={profileInfo.imgUrl} \n                    />\n                    <div className=\"user-profile__info\">\n                        <div>Just Text</div>\n                        <div className=\"user-profile__info-buttons\">\n                            {isFriend === null\n                                ?\n                                <div></div>\n                                :\n                                <IsFriend \n                                    className=\"\"\n                                    isFriend={isFriend}\n                                    isRequestSent={isRequestSent}\n                                    isRequestReceived={isRequestReceived}\n                                    taskSendFriendRequest={this.taskSendFriendRequest}\n                                    taskAcceptFriendRequest={this.taskAcceptFriendRequest}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                {isFriend === null\n                    ?\n                    <div></div>\n                    :\n                    (isFriend === true\n                        ?\n                        <div className=\"user__profile-details\">\n                            <div className=\"user__interaction user-interaction\">\n                                <div className=\"interaction__favourites\">\n                                    {favouriteTeams.map(team => {\n                                        return (\n                                            <TeamCard \n                                                className=\"user-interaction__fav-card\" \n                                                taskDisplayTeam={this.taskDisplayTeam}\n                                                strTeamBadge={team.strTeamBadge}\n                                                teamId={team.idTeam} \n                                            />\n                                        )\n                                    })} \n                                </div>\n                                <div className=\"user-interaction__feed-container\">\n                                    <div className=\"user-interaction__feed feed\">\n                                        <div className=\"feed__card\">\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={profileInfo.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`Write something to ${profileInfo.name}...`}\n                                            />\n                                        </div>\n                                        {feed.map(feedContent => {\n                                            return (\n                                                <FeedCard \n                                                    className=\"feed__card\"\n                                                    feedContent={feedContent}\n                                                    taskTakeToGamePage={this.taskTakeToGamePage}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user__updates user-updates\">\n                                <div className=\"user-updates__container\">\n                                    {pastEvents.map(event => {\n                                        return <EventScore event={event} />\n                                    })}\n                                </div>\n                                <div className=\"user-updates__container\">\n                                    {articles.map(article => {\n                                        return (\n                                            <NewsArticle \n                                                className=\"team__news-article\" \n                                                newsArticle={article} \n                                            />\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"user__friends user-friends\">\n                                <div className=\"user-friends__wrapper\">\n                                    <div className=\"user-friends__container\">\n                                        <h3 className=\"friends__title\">Friends</h3>\n                                        {friends.map(friend => {\n                                            return(\n                                                <ProfileImage \n                                                    key={friend.userId}\n                                                    className=\"user-friends__avatar\"\n                                                    imgSrc={friend.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            {detailsEnabled && \n                                <TeamDetails \n                                    team={selectedTeam} \n                                    taskEndDisplayTeam={this.taskEndDisplayTeam}\n                                    taskUpdateFavourites={this.taskUpdateFavourites}\n                                />\n                            }\n                        </div>\n                        :\n                        <div className=\"user__private user-private\">\n                            <div className=\"user-private__wrapper\">\n                                <img className=\"user-private__img\" src={lockIcon} alt=\"lock\"/>\n                                <div className=\"user-private__card\">    \n                                    <h3 className=\"user-private__title\">This Account is Private</h3>\n                                    <p className=\"user-private__text\">Send a friend request to this account to see their details.</p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n                \n                \n            </main>\n        )\n    }\n    \n}\n\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}