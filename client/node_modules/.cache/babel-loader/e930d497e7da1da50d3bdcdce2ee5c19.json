{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js\";\nimport './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\nimport timeDifference from '../../functions/timeDifference';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API__KEY = \"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\nclass ActualUserPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      favouriteTeams: [],\n      selectedTeam: null,\n      detailsEnabled: false,\n      pastEvents: [],\n      articles: [],\n      currentUser: {},\n      profileInfo: {},\n      friends: [],\n      isFriend: null,\n      isRequestSent: false,\n      isRequestReceived: false,\n      feed: [],\n      feedComments: []\n    };\n\n    this.taskDisplayTeam = teamId => {\n      axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId).then(response => {\n        const selectedTeam = response.data.teams[0];\n        this.setState({\n          selectedTeam: selectedTeam,\n          detailsEnabled: true\n        });\n      });\n    };\n\n    this.taskEndDisplayTeam = () => {\n      this.setState({\n        detailsEnabled: false\n      });\n    };\n\n    this.taskUpdateFavourites = () => {\n      const token = sessionStorage.getItem(\"token\");\n      axios.get(localUrl + \"/favourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.data) {\n          this.setState({\n            favouriteTeams: response.data\n          });\n        } else {\n          this.setState({\n            favouriteTeams: []\n          });\n        }\n      });\n    };\n\n    this.taskSendFriendRequest = () => {\n      const token = sessionStorage.getItem(\"token\");\n      const userId = this.props.match.params.userId;\n      axios.post(localUrl + '/requests', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isRequestSent: true\n        });\n      });\n    };\n\n    this.taskAcceptFriendRequest = () => {\n      const token = sessionStorage.getItem(\"token\");\n      const requestorId = this.props.match.params.userId;\n      axios.post(localUrl + '/requests/acceptRequest', {\n        requestorId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isFriend: true\n        });\n      });\n    };\n\n    this.taskAddPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentType = \"comment\";\n      const userId = this.props.match.params.userId;\n      const commentData = {\n        userId,\n        commentText,\n        contentType\n      };\n      axios.post(localUrl + \"/feed\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          feed: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskAddCommentToPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const userId = this.props.match.params.userId;\n      const commentText = event.target.commentText.value;\n      const contentId = event.target.contentId.value;\n      const contentType = event.target.contentType.value;\n      const receiverId = event.target.receiverId.value;\n      const feedCommentData = {\n        contentId,\n        contentType,\n        commentText,\n        receiverId\n      };\n      axios.post(localUrl + \"/comments\", feedCommentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        return axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          feedComments: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskTakeToGamePage = idEvent => {\n      this.props.history.push('/game/' + idEvent);\n    };\n  }\n\n  componentDidMount() {\n    this.props.taskUpdateUrl(this.props.match.url);\n    const token = sessionStorage.getItem(\"token\");\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      axios.get(axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })).then(response => {\n        userId = response.data.userId;\n        this.setState({\n          currentUser: response.data\n        });\n        return axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/users/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/friends/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/feed/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      }).then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, friendsResponse, feedResponse, feedCommentsResponse) => {\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        } else {\n          this.setState({\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        }\n\n        return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      })).catch(error => {\n        console.log(error);\n      });\n    } else {\n      axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/friends/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/feed/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]).then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, friendsResponse, feedResponse, feedCommentsResponse) => {\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        } else {\n          this.setState({\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        }\n\n        return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      })).then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n        this.setState({\n          isFriend: isFriendResponse.data.isFriend,\n          isRequestSent: isSentResponse.data.isRequestSent,\n          isRequestReceived: isRecievedResponse.data.isRequestReceived\n        });\n      })).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  componentDidUpdate() {//     const {index, favouriteTeams, pastEvents, articles} = this.state;\n    //     console.log(index)\n    //     if(index < favouriteTeams.length) {\n    //         const teamId = favouriteTeams[index].idTeam;\n    //         const teamName = favouriteTeams[index].strTeam;\n    //         setTimeout(axios.all([\n    //             axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n    //             axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n    //         ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n    //             let newPastEvents = pastEventsResponse.data.results;\n    //             let newArticles = teamNewsResponse.data.articles;\n    //             newPastEvents = newPastEvents.map(event => {\n    //                 const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n    //                 return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             })\n    //             newArticles = newArticles.map(article => {\n    //                 const {title, image, url} = article;\n    //                 return {title, image, url};\n    //             })\n    //             // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n    //             // const {title, image, url} = teamNewsResponse.data.articles;\n    //             // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             // const newArticles = {title, image, url};\n    //             this.setState({\n    //                 index: index + 1,\n    //                 pastEvents: [...pastEvents, ...newPastEvents],\n    //                 articles: [...articles, ...newArticles]\n    //             })\n    //         })) ,1000)\n    //     }\n  }\n\n  render() {\n    const {\n      favouriteTeams,\n      selectedTeam,\n      detailsEnabled,\n      pastEvents,\n      articles,\n      profileInfo,\n      currentUser,\n      friends,\n      isFriend,\n      isRequestSent,\n      isRequestReceived,\n      feed,\n      feedComments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"user-profile__avatar\",\n          avatarUrl: profileInfo.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile__name\",\n            children: [profileInfo.name, \" \", profileInfo.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__date\",\n            children: [\"Joined \", timeDifference(profileInfo.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: profileInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: homeIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"Lives in \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: locationIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile__info-buttons\",\n            children: isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(IsFriend, {\n              className: \"\",\n              isFriend: isFriend,\n              isRequestSent: isRequestSent,\n              isRequestReceived: isRequestReceived,\n              taskSendFriendRequest: this.taskSendFriendRequest,\n              taskAcceptFriendRequest: this.taskAcceptFriendRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }, this) : isFriend === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__interaction user-interaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction__favourites\",\n            children: favouriteTeams.map(team => {\n              return /*#__PURE__*/_jsxDEV(TeamCard, {\n                className: \"user-interaction__fav-card\",\n                taskDisplayTeam: this.taskDisplayTeam,\n                strTeamBadge: team.strTeamBadge,\n                teamId: team.idTeam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-interaction__feed-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-interaction__feed feed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed__card\",\n                children: /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: currentUser.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `Write something to ${profileInfo.name}...`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 41\n              }, this), feed.map(feedContent => {\n                return /*#__PURE__*/_jsxDEV(FeedCard, {\n                  className: \"feed__card\",\n                  feedContent: feedContent,\n                  feedComments: feedComments,\n                  taskTakeToGamePage: this.taskTakeToGamePage,\n                  taskAddCommentToPost: this.taskAddCommentToPost,\n                  userAvatar: currentUser.imgUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__updates user-updates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: pastEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(EventScore, {\n                event: event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: articles.map(article => {\n              return /*#__PURE__*/_jsxDEV(NewsArticle, {\n                className: \"team__news-article\",\n                newsArticle: article\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__friends user-friends\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-friends__wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-friends__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 41\n              }, this), friends.map(friend => {\n                return /*#__PURE__*/_jsxDEV(ProfileImage, {\n                  className: \"user-friends__avatar\",\n                  imgSrc: friend.imgUrl\n                }, friend.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 29\n        }, this), detailsEnabled && /*#__PURE__*/_jsxDEV(TeamDetails, {\n          team: selectedTeam,\n          taskEndDisplayTeam: this.taskEndDisplayTeam,\n          taskUpdateFavourites: this.taskUpdateFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__private user-private\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-private__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"user-private__img\",\n            src: lockIcon,\n            alt: \"lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-private__card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"user-private__title\",\n              children: \"This Account is Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-private__text\",\n              children: \"Send a friend request to this account to see their details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ActualUserPage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js"],"names":["React","axios","Avatar","TeamCard","TeamDetails","EventScore","NewsArticle","ProfileImage","IsFriend","FeedForm","FeedCard","lockIcon","homeIcon","locationIcon","timeDifference","API__KEY","localUrl","ActualUserPage","Component","state","index","favouriteTeams","selectedTeam","detailsEnabled","pastEvents","articles","currentUser","profileInfo","friends","isFriend","isRequestSent","isRequestReceived","feed","feedComments","taskDisplayTeam","teamId","get","then","response","data","teams","setState","taskEndDisplayTeam","taskUpdateFavourites","token","sessionStorage","getItem","headers","Authorization","taskSendFriendRequest","userId","props","match","params","post","_response","taskAcceptFriendRequest","requestorId","taskAddPost","event","preventDefault","commentText","target","value","contentType","commentData","reset","taskAddCommentToPost","contentId","receiverId","feedCommentData","taskTakeToGamePage","idEvent","history","push","componentDidMount","taskUpdateUrl","url","all","spread","favouritesResponse","profileResponse","currentUserResponse","friendsResponse","feedResponse","feedCommentsResponse","catch","error","console","log","isFriendResponse","isSentResponse","isRecievedResponse","componentDidUpdate","render","imgUrl","name","lastName","timestamp","description","location","from","map","team","strTeamBadge","idTeam","feedContent","article","friend"],"mappings":"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","sourcesContent":["import './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\n\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\n\nimport timeDifference from '../../functions/timeDifference';\n\n\nconst API__KEY=\"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\n\nclass ActualUserPage extends React.Component {\n\n\n    state = {\n        index: 0,\n        favouriteTeams:[],\n        selectedTeam: null,\n        detailsEnabled: false,\n        pastEvents: [],\n        articles: [],\n        currentUser: {},\n        profileInfo: {},\n        friends: [],\n        isFriend: null,\n        isRequestSent: false,\n        isRequestReceived: false,\n        feed: [],\n        feedComments: []\n    }\n\n    componentDidMount() {\n        this.props.taskUpdateUrl(this.props.match.url);\n\n        const token = sessionStorage.getItem(\"token\");\n        let userId = this.props.match.params.userId;\n\n        if(!userId) {\n\n            axios.get(axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}))\n            .then(response => {\n                \n                userId = response.data.userId;\n\n                this.setState({\n                    currentUser: response.data,\n                })\n\n                return axios.all([\n                    axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            })\n            .then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, \n                friendsResponse, feedResponse, feedCommentsResponse)=> {\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data\n                    })\n                }\n                else {\n                    this.setState({\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data\n                    })\n                    \n                } \n            \n                return axios.all([\n                    axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        else {\n            axios.all([\n                axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n            ])\n            .then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, \n                friendsResponse, feedResponse, feedCommentsResponse)=> {\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data\n                    })\n                }\n                else {\n                    this.setState({\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data\n                    })\n                    \n                } \n            \n                return axios.all([\n                    axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            }))\n            .then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n    \n                this.setState({\n                    isFriend: isFriendResponse.data.isFriend,\n                    isRequestSent: isSentResponse.data.isRequestSent,\n                    isRequestReceived: isRecievedResponse.data.isRequestReceived\n                })\n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        \n    }\n\n    componentDidUpdate() {\n    //     const {index, favouriteTeams, pastEvents, articles} = this.state;\n\n    //     console.log(index)\n    //     if(index < favouriteTeams.length) {\n\n    //         const teamId = favouriteTeams[index].idTeam;\n    //         const teamName = favouriteTeams[index].strTeam;\n\n    //         setTimeout(axios.all([\n    //             axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n    //             axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n    //         ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n\n    //             let newPastEvents = pastEventsResponse.data.results;\n    //             let newArticles = teamNewsResponse.data.articles;\n\n    //             newPastEvents = newPastEvents.map(event => {\n    //                 const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n    //                 return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             })\n\n    //             newArticles = newArticles.map(article => {\n    //                 const {title, image, url} = article;\n    //                 return {title, image, url};\n    //             })\n\n    //             // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n    //             // const {title, image, url} = teamNewsResponse.data.articles;\n\n    //             // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             // const newArticles = {title, image, url};\n\n    //             this.setState({\n    //                 index: index + 1,\n    //                 pastEvents: [...pastEvents, ...newPastEvents],\n    //                 articles: [...articles, ...newArticles]\n    //             })\n    //         })) ,1000)\n            \n\n    //     }\n        \n        \n        \n    }\n\n    taskDisplayTeam = (teamId) => {\n        axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId)\n        .then(response => {\n            const selectedTeam = response.data.teams[0];\n\n            this.setState({\n                selectedTeam: selectedTeam,\n                detailsEnabled: true\n            })\n        })\n    }\n\n    taskEndDisplayTeam = () => {\n        \n        this.setState({\n            detailsEnabled: false\n        })\n    }\n\n    taskUpdateFavourites = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            \n            if(response.data){\n                this.setState({\n                    favouriteTeams: response.data\n                })\n            }\n            else {\n                this.setState({\n                    favouriteTeams: []\n                })\n            } \n\n        })\n    }\n\n    taskSendFriendRequest = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = this.props.match.params.userId;\n\n        axios.post(localUrl + '/requests', {userId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n            \n            this.setState({\n                isRequestSent: true\n            })\n        })\n    }\n\n    taskAcceptFriendRequest = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n        const requestorId = this.props.match.params.userId;\n\n        axios.post(localUrl + '/requests/acceptRequest', {requestorId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            this.setState({\n                isFriend: true\n            })\n        })\n    }\n\n    taskAddPost = (event) => {\n\n        event.preventDefault();\n    \n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentType = \"comment\";\n        const userId = this.props.match.params.userId;\n        \n        const commentData = {\n            userId, \n            commentText, \n            contentType\n        }\n        \n        axios.post(localUrl + \"/feed\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            this.setState({\n                feed: response.data\n            }, () => {\n                event.target.reset();\n            })\n        })\n\n    }\n\n    taskAddCommentToPost = (event) => {\n\n        event.preventDefault();\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = this.props.match.params.userId;\n\n        const commentText = event.target.commentText.value;\n        const contentId = event.target.contentId.value;\n        const contentType = event.target.contentType.value;\n        const receiverId = event.target.receiverId.value;\n\n        const feedCommentData = {\n            contentId, \n            contentType, \n            commentText, \n            receiverId\n        }\n\n        axios.post(localUrl + \"/comments\", feedCommentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            return axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n        })\n        .then(response => {\n\n            this.setState({\n                feedComments: response.data\n            }, () => {\n\n                event.target.reset();\n            })\n        })\n    }\n\n    taskTakeToGamePage = (idEvent) => {\n\n        this.props.history.push('/game/' + idEvent);\n    }\n\n    render () {\n\n        const {favouriteTeams, selectedTeam, detailsEnabled, \n            pastEvents, articles, profileInfo, currentUser, friends, isFriend, \n            isRequestSent, isRequestReceived, feed, feedComments} = this.state;\n\n        return(\n            <main className=\"user\">\n                <div className=\"user__profile user-profile\">\n                    <Avatar \n                        className=\"user-profile__avatar\" \n                        avatarUrl={profileInfo.imgUrl} \n                    />\n                    <div className=\"user-profile__info\">\n                        <h3 className=\"profile__name\">{profileInfo.name} {profileInfo.lastName}</h3>\n                        <p className=\"profile__date\">Joined {timeDifference(profileInfo.timestamp)}</p>\n                        <p className=\"profile__description\">{profileInfo.description}</p>\n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={homeIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">Lives in <span className=\"profile__bold\">{profileInfo.location}</span></p>\n                        </div> \n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={locationIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">From <span className=\"profile__bold\">{profileInfo.from}</span></p>\n                        </div>\n                        <div className=\"user-profile__info-buttons\">\n                            {isFriend === null\n                                ?\n                                <div></div>\n                                :\n                                <IsFriend \n                                    className=\"\"\n                                    isFriend={isFriend}\n                                    isRequestSent={isRequestSent}\n                                    isRequestReceived={isRequestReceived}\n                                    taskSendFriendRequest={this.taskSendFriendRequest}\n                                    taskAcceptFriendRequest={this.taskAcceptFriendRequest}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                {isFriend === null\n                    ?\n                    <div></div>\n                    :\n                    (isFriend === true\n                        ?\n                        <div className=\"user__profile-details\">\n                            <div className=\"user__interaction user-interaction\">\n                                <div className=\"interaction__favourites\">\n                                    {favouriteTeams.map(team => {\n                                        return (\n                                            <TeamCard \n                                                className=\"user-interaction__fav-card\" \n                                                taskDisplayTeam={this.taskDisplayTeam}\n                                                strTeamBadge={team.strTeamBadge}\n                                                teamId={team.idTeam} \n                                            />\n                                        )\n                                    })} \n                                </div>\n                                <div className=\"user-interaction__feed-container\">\n                                    <div className=\"user-interaction__feed feed\">\n                                        <div className=\"feed__card\">\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={currentUser.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`Write something to ${profileInfo.name}...`}\n                                            />\n                                        </div>\n                                        {feed.map(feedContent => {\n                                            return (\n                                                <FeedCard \n                                                    className=\"feed__card\"\n                                                    feedContent={feedContent}\n                                                    feedComments={feedComments}\n                                                    taskTakeToGamePage={this.taskTakeToGamePage}\n                                                    taskAddCommentToPost={this.taskAddCommentToPost}\n                                                    userAvatar={currentUser.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user__updates user-updates\">\n                                <div className=\"user-updates__container\">\n                                    {pastEvents.map(event => {\n                                        return <EventScore event={event} />\n                                    })}\n                                </div>\n                                <div className=\"user-updates__container\">\n                                    {articles.map(article => {\n                                        return (\n                                            <NewsArticle \n                                                className=\"team__news-article\" \n                                                newsArticle={article} \n                                            />\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"user__friends user-friends\">\n                                <div className=\"user-friends__wrapper\">\n                                    <div className=\"user-friends__container\">\n                                        <h3 className=\"friends__title\">Friends</h3>\n                                        {friends.map(friend => {\n                                            return(\n                                                <ProfileImage \n                                                    key={friend.userId}\n                                                    className=\"user-friends__avatar\"\n                                                    imgSrc={friend.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            {detailsEnabled && \n                                <TeamDetails \n                                    team={selectedTeam} \n                                    taskEndDisplayTeam={this.taskEndDisplayTeam}\n                                    taskUpdateFavourites={this.taskUpdateFavourites}\n                                />\n                            }\n                        </div>\n                        :\n                        <div className=\"user__private user-private\">\n                            <div className=\"user-private__wrapper\">\n                                <img className=\"user-private__img\" src={lockIcon} alt=\"lock\"/>\n                                <div className=\"user-private__card\">    \n                                    <h3 className=\"user-private__title\">This Account is Private</h3>\n                                    <p className=\"user-private__text\">Send a friend request to this account to see their details.</p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n                \n                \n            </main>\n        )\n    }\n    \n}\n\nexport default ActualUserPage;"]},"metadata":{},"sourceType":"module"}