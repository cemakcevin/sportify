{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js\";\nimport './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\nimport timeDifference from '../../functions/timeDifference';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API__KEY = \"dd7ed4159ce8b1df6d8cbadaa67c7cdf\";\nconst localUrl = \"http://localhost:8686\";\nlet socket;\n\nclass ActualUserPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      favouriteTeams: [],\n      selectedTeam: null,\n      detailsEnabled: false,\n      pastEvents: [],\n      articles: [],\n      currentUser: {},\n      profileInfo: {},\n      currentIsProfile: null,\n      friends: [],\n      requests: [],\n      isFriend: null,\n      isRequestSent: false,\n      isRequestReceived: false,\n      feed: [],\n      feedComments: []\n    };\n\n    this.taskDisplayTeam = teamId => {\n      axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId).then(response => {\n        const selectedTeam = response.data.teams[0];\n        this.setState({\n          selectedTeam: selectedTeam,\n          detailsEnabled: true\n        });\n      });\n    };\n\n    this.taskEndDisplayTeam = () => {\n      this.setState({\n        detailsEnabled: false\n      });\n    };\n\n    this.taskUpdateFavourites = () => {\n      const token = sessionStorage.getItem(\"token\");\n      axios.get(localUrl + \"/favourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.data) {\n          this.setState({\n            favouriteTeams: response.data\n          });\n        } else {\n          this.setState({\n            favouriteTeams: []\n          });\n        }\n      });\n    };\n\n    this.taskSendFriendRequest = () => {\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const userId = profileInfo.userId;\n      axios.post(localUrl + '/requests', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isRequestSent: true\n        }, () => {\n          socket.emit(\"friendRequest\");\n        });\n      });\n    };\n\n    this.taskAcceptFriendRequest = () => {\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const requestorId = profileInfo.userId;\n      axios.post(localUrl + '/requests/acceptRequest', {\n        requestorId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isFriend: true\n        }, () => {\n          socket.emit(\"friendAccept\");\n        });\n      });\n    };\n\n    this.taskAddPost = event => {\n      event.preventDefault();\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentType = \"comment\";\n      const userId = profileInfo.userId;\n      const commentData = {\n        userId,\n        commentText,\n        contentType\n      };\n      axios.post(localUrl + \"/feed\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          feed: response.data\n        }, () => {\n          event.target.reset();\n          socket.emit(\"feedPost\", {\n            feed: response.data\n          });\n        });\n      });\n    };\n\n    this.taskAddCommentToPost = event => {\n      event.preventDefault();\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const userId = profileInfo.userId;\n      const commentText = event.target.commentText.value;\n      const contentId = event.target.contentId.value;\n      const contentType = event.target.contentType.value;\n      const receiverId = event.target.receiverId.value;\n      const feedCommentData = {\n        contentId,\n        contentType,\n        commentText,\n        receiverId\n      };\n      axios.post(localUrl + \"/comments\", feedCommentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        return axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          feedComments: response.data\n        }, () => {\n          event.target.reset();\n          socket.emit(\"feedPostComment\", {\n            feedComments: response.data\n          });\n        });\n      });\n    };\n\n    this.taskTakeToGamePage = idEvent => {\n      this.props.history.push('/game/' + idEvent);\n    };\n  }\n\n  componentDidMount(prevProps, _prevState) {\n    const url = this.props.match.url;\n    const previousUrl = prevProps && prevProps.match.url;\n\n    if (url !== previousUrl) {\n      this.props.taskUpdateUrl(this.props.match.url);\n    }\n\n    const token = sessionStorage.getItem(\"token\");\n    let userId = this.props.match.params.userId;\n    socket = io.connect(localUrl);\n\n    if (!userId) {\n      socket.on(\"feedPostUpdate\", () => {\n        axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            feed: response.data\n          });\n        });\n      });\n      socket.on(\"feedPostCommentUpdate\", () => {\n        axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            feedComments: response.data\n          });\n        });\n      });\n      socket.on(\"friendRequestUpdate\", () => {\n        axios.get(localUrl + \"/requests\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            requests: response.data\n          });\n        });\n      });\n      socket.off(\"friendAcceptUpdate\");\n      axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        userId = response.data.userId;\n        console.log(userId);\n        this.setState({\n          currentUser: response.data,\n          profileInfo: response.data,\n          currentIsProfile: true\n        }, () => {\n          console.log(this.state.currentUser);\n        });\n        return axios.all([axios.get(localUrl + \"/favourites\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/friends\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      }).then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse) => {\n        console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse);\n\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            friends: friendsResponse.data,\n            requests: requestsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data,\n            isFriend: true\n          }, () => console.log(\"yess\"));\n        } else {\n          this.setState({\n            friends: friendsResponse.data,\n            requests: requestsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data,\n            isFriend: true\n          }, () => console.log(\"yess\"));\n        }\n      })).catch(error => {\n        console.log(error);\n      });\n    } else {\n      socket.on(\"feedPostUpdate\", () => {\n        axios.get(localUrl + \"/feed/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            feed: response.data\n          });\n        });\n      });\n      socket.on(\"feedPostCommentUpdate\", () => {\n        axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            feedComments: response.data\n          });\n        });\n      });\n      socket.on(\"friendAcceptUpdate\", () => {\n        axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          this.setState({\n            isFriend: response.data\n          });\n        });\n      });\n      socket.off(\"friendRequestUpdate\");\n      axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/friends/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/feed/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]).then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, friendsResponse, feedResponse, feedCommentsResponse) => {\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            currentIsProfile: false,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        } else {\n          this.setState({\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            currentIsProfile: false,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        }\n\n        return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      })).then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n        this.setState({\n          isFriend: isFriendResponse.data.isFriend,\n          isRequestSent: isSentResponse.data.isRequestSent,\n          isRequestReceived: isRecievedResponse.data.isRequestReceived\n        });\n      })).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, _prevState) {\n    const url = this.props.match.url;\n    const previousUrl = prevProps && prevProps.match.url;\n\n    if (url !== previousUrl) {\n      this.props.taskUpdateUrl(this.props.match.url);\n    }\n\n    const token = sessionStorage.getItem(\"token\");\n    const userId = this.props.match.params.userId;\n    const prevUserId = prevProps.match.params.userId;\n\n    if (userId !== prevUserId) {\n      socket.off(\"feedPostUpdate\");\n      socket.off(\"feedPostCommentUpdate\");\n      socket.off(\"friendRequestUpdate\");\n      socket.off(\"friendAcceptUpdate\");\n\n      if (!userId) {\n        socket.on(\"feedPostUpdate\", () => {\n          axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            this.setState({\n              feed: response.data\n            });\n          });\n        });\n        socket.on(\"feedPostCommentUpdate\", () => {\n          axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            this.setState({\n              feedComments: response.data\n            });\n          });\n        });\n        socket.on(\"friendRequestUpdate\", () => {\n          axios.get(localUrl + \"/requests\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            this.setState({\n              requests: response.data\n            });\n          });\n        });\n        axios.get(localUrl + \"/users\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          userId = response.data.userId;\n          console.log(userId);\n          this.setState({\n            currentUser: response.data,\n            profileInfo: response.data,\n            currentIsProfile: true\n          }, () => {\n            console.log(this.state.currentUser);\n          });\n          return axios.all([axios.get(localUrl + \"/favourites\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/friends\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/requests\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          })]);\n        }).then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse) => {\n          console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse);\n\n          if (favouritesResponse.data) {\n            this.setState({\n              favouriteTeams: favouritesResponse.data,\n              friends: friendsResponse.data,\n              requests: requestsResponse.data,\n              feed: feedResponse.data,\n              feedComments: feedCommentsResponse.data,\n              isFriend: true\n            }, () => console.log(\"yess\"));\n          } else {\n            this.setState({\n              friends: friendsResponse.data,\n              requests: requestsResponse.data,\n              feed: feedResponse.data,\n              feedComments: feedCommentsResponse.data,\n              isFriend: true\n            }, () => console.log(\"yess\"));\n          }\n        })).catch(error => {\n          console.log(error);\n        });\n      } else {\n        socket.on(\"feedPostUpdate\", () => {\n          axios.get(localUrl + \"/feed/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            this.setState({\n              feed: response.data\n            });\n          });\n        });\n        socket.on(\"feedPostCommentUpdate\", () => {\n          axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            this.setState({\n              feedComments: response.data\n            });\n          });\n        });\n        socket.on(\"friendAcceptUpdate\", () => {\n          axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/favourites/user/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          })]).then(axios.spread((isFriendResponse, favouritesResponse) => {\n            this.setState({\n              isFriend: isFriendResponse.data,\n              favouriteTeams: favouritesResponse.data\n            });\n          }));\n        });\n        axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/users/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/users\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/friends/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/feed/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]).then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, friendsResponse, feedResponse, feedCommentsResponse) => {\n          if (favouritesResponse.data) {\n            this.setState({\n              favouriteTeams: favouritesResponse.data,\n              currentUser: currentUserResponse.data,\n              profileInfo: profileResponse.data,\n              currentIsProfile: false,\n              friends: friendsResponse.data,\n              feed: feedResponse.data,\n              feedComments: feedCommentsResponse.data\n            });\n          } else {\n            this.setState({\n              currentUser: currentUserResponse.data,\n              profileInfo: profileResponse.data,\n              currentIsProfile: false,\n              friends: friendsResponse.data,\n              feed: feedResponse.data,\n              feedComments: feedCommentsResponse.data\n            });\n          }\n\n          return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          })]);\n        })).then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n          this.setState({\n            isFriend: isFriendResponse.data.isFriend,\n            isRequestSent: isSentResponse.data.isRequestSent,\n            isRequestReceived: isRecievedResponse.data.isRequestReceived\n          });\n        })).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    socket.off(\"feedPostUpdate\");\n    socket.off(\"feedPostCommentUpdate\");\n  }\n\n  render() {\n    const {\n      favouriteTeams,\n      selectedTeam,\n      detailsEnabled,\n      pastEvents,\n      articles,\n      profileInfo,\n      currentUser,\n      currentIsProfile,\n      friends,\n      requests,\n      isFriend,\n      isRequestSent,\n      isRequestReceived,\n      feed,\n      feedComments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"user-profile__avatar\",\n          avatarUrl: profileInfo.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile__name\",\n            children: [profileInfo.name, \" \", profileInfo.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__date\",\n            children: [\"Joined \", timeDifference(profileInfo.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: profileInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: homeIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"Lives in \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: locationIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this), !currentIsProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile__info-buttons\",\n            children: isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(IsFriend, {\n              className: \"\",\n              isFriend: isFriend,\n              isRequestSent: isRequestSent,\n              isRequestReceived: isRequestReceived,\n              taskSendFriendRequest: this.taskSendFriendRequest,\n              taskAcceptFriendRequest: this.taskAcceptFriendRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 17\n      }, this), isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 21\n      }, this) : isFriend === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__interaction user-interaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction__favourites\",\n            children: favouriteTeams.map(team => {\n              return /*#__PURE__*/_jsxDEV(TeamCard, {\n                className: \"user-interaction__fav-card\",\n                taskDisplayTeam: this.taskDisplayTeam,\n                strTeamBadge: team.strTeamBadge,\n                teamId: team.idTeam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-interaction__feed-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-interaction__feed feed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed__card\",\n                children: currentIsProfile ? /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: currentUser.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `What is on your mind?`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: currentUser.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `Write something to ${profileInfo.name}...`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 41\n              }, this), feed.map(feedContent => {\n                return /*#__PURE__*/_jsxDEV(FeedCard, {\n                  className: \"feed__card\",\n                  feedContent: feedContent,\n                  feedComments: feedComments,\n                  taskTakeToGamePage: this.taskTakeToGamePage,\n                  taskAddCommentToPost: this.taskAddCommentToPost,\n                  userAvatar: currentUser.imgUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__updates user-updates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: pastEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(EventScore, {\n                event: event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: articles.map(article => {\n              return /*#__PURE__*/_jsxDEV(NewsArticle, {\n                className: \"team__news-article\",\n                newsArticle: article\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__friends user-friends\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-friends__wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-friends__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 41\n              }, this), friends.map(friend => {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/user/\" + friend.friendId,\n                  children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                    className: \"friends__avatar\",\n                    imgSrc: friend.imgUrl\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 53\n                  }, this)\n                }, friend.friendId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"friends__request-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 41\n              }, this), requests.map(request => {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/user/\" + request.requestorId,\n                  children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                    className: \"friends__avatar\",\n                    imgSrc: request.imgUrl\n                  }, request.requestorId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 53\n                  }, this)\n                }, request.requestorId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 29\n        }, this), detailsEnabled && /*#__PURE__*/_jsxDEV(TeamDetails, {\n          team: selectedTeam,\n          taskEndDisplayTeam: this.taskEndDisplayTeam,\n          taskUpdateFavourites: this.taskUpdateFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__private user-private\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-private__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"user-private__img\",\n            src: lockIcon,\n            alt: \"lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-private__card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"user-private__title\",\n              children: \"This Account is Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-private__text\",\n              children: \"Send a friend request to this account to see their details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ActualUserPage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js"],"names":["React","axios","Link","io","Avatar","TeamCard","TeamDetails","EventScore","NewsArticle","ProfileImage","IsFriend","FeedForm","FeedCard","lockIcon","homeIcon","locationIcon","timeDifference","API__KEY","localUrl","socket","ActualUserPage","Component","state","index","favouriteTeams","selectedTeam","detailsEnabled","pastEvents","articles","currentUser","profileInfo","currentIsProfile","friends","requests","isFriend","isRequestSent","isRequestReceived","feed","feedComments","taskDisplayTeam","teamId","get","then","response","data","teams","setState","taskEndDisplayTeam","taskUpdateFavourites","token","sessionStorage","getItem","headers","Authorization","taskSendFriendRequest","userId","post","_response","emit","taskAcceptFriendRequest","requestorId","taskAddPost","event","preventDefault","commentText","target","value","contentType","commentData","reset","taskAddCommentToPost","contentId","receiverId","feedCommentData","taskTakeToGamePage","idEvent","props","history","push","componentDidMount","prevProps","_prevState","url","match","previousUrl","taskUpdateUrl","params","connect","on","off","console","log","all","spread","favouritesResponse","friendsResponse","requestsResponse","feedResponse","feedCommentsResponse","catch","error","profileResponse","currentUserResponse","isFriendResponse","isSentResponse","isRecievedResponse","componentDidUpdate","prevUserId","componentWillUnmount","render","imgUrl","name","lastName","timestamp","description","location","from","map","team","strTeamBadge","idTeam","feedContent","article","friend","friendId","request"],"mappings":"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","sourcesContent":["import './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\n\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\n\nimport timeDifference from '../../functions/timeDifference';\n\n\nconst API__KEY=\"dd7ed4159ce8b1df6d8cbadaa67c7cdf\";\nconst localUrl = \"http://localhost:8686\";\nlet socket;\n\n\nclass ActualUserPage extends React.Component {\n\n\n    state = {\n        index: 0,\n        favouriteTeams:[],\n        selectedTeam: null,\n        detailsEnabled: false,\n        pastEvents: [],\n        articles: [],\n        currentUser: {},\n        profileInfo: {},\n        currentIsProfile: null,\n        friends: [],\n        requests: [],\n        isFriend: null,\n        isRequestSent: false,\n        isRequestReceived: false,\n        feed: [],\n        feedComments: []\n    }\n\n    componentDidMount(prevProps, _prevState) {\n\n        const url = this.props.match.url;\n        const previousUrl = prevProps && prevProps.match.url;\n\n        if(url !== previousUrl) {\n            this.props.taskUpdateUrl(this.props.match.url);\n        }\n\n        const token = sessionStorage.getItem(\"token\");\n        let userId = this.props.match.params.userId;\n\n        socket = io.connect(localUrl);\n\n        if(!userId) {\n\n            socket.on(\"feedPostUpdate\", () => {\n                axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n                    \n                    this.setState({\n                        feed: response.data\n                    })\n                })\n            });\n\n            socket.on(\"feedPostCommentUpdate\", () => {\n                axios.get(localUrl + \"/comments/feedComments/\"  + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n                    \n                    this.setState({\n                        feedComments: response.data\n                    })\n                })\n            });\n\n            socket.on(\"friendRequestUpdate\", () => {\n                axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n\n                    this.setState({\n                        requests: response.data,\n                    })\n                })\n            });\n\n            socket.off(\"friendAcceptUpdate\");\n\n            axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}})\n            .then(response => {\n                \n                userId = response.data.userId;\n                console.log(userId)\n\n                this.setState({\n                    currentUser: response.data,\n                    profileInfo: response.data,\n                    currentIsProfile: true\n                }, () => {\n                    console.log(this.state.currentUser)\n                })\n\n                return axios.all([\n                    axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/friends\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            })\n            .then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse)=> {\n                console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse)\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        friends: friendsResponse.data,\n                        requests: requestsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                        isFriend: true\n                    }, () => console.log(\"yess\"))\n                }\n                else {\n                    this.setState({\n                        friends: friendsResponse.data,\n                        requests: requestsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                        isFriend: true\n                    },() =>  console.log(\"yess\"))\n                    \n                } \n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        else {\n\n            socket.on(\"feedPostUpdate\", () => {\n                axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n                    \n                    this.setState({\n                        feed: response.data\n                    })\n                })\n            });\n\n            socket.on(\"feedPostCommentUpdate\", () => {\n                axios.get(localUrl + \"/comments/feedComments/\"  + userId, {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n                    \n                    this.setState({\n                        feedComments: response.data\n                    })\n                })\n            });\n\n            socket.on(\"friendAcceptUpdate\", () => {\n                axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n\n                    this.setState({\n                        isFriend: response.data\n                    })\n                })\n            });\n\n            socket.off(\"friendRequestUpdate\");\n\n            axios.all([\n                axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n            ])\n            .then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, \n                friendsResponse, feedResponse, feedCommentsResponse)=> {\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        currentIsProfile: false,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                    })\n                }\n                else {\n                    this.setState({\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        currentIsProfile: false,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                    })\n                    \n                } \n            \n                return axios.all([\n                    axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            }))\n            .then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n    \n                this.setState({\n                    isFriend: isFriendResponse.data.isFriend,\n                    isRequestSent: isSentResponse.data.isRequestSent,\n                    isRequestReceived: isRecievedResponse.data.isRequestReceived\n                })\n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        \n    }\n\n    componentDidUpdate(prevProps, _prevState) {\n        \n        const url = this.props.match.url;\n        const previousUrl = prevProps && prevProps.match.url;\n\n        if(url !== previousUrl) {\n            this.props.taskUpdateUrl(this.props.match.url);\n        }\n\n        const token = sessionStorage.getItem(\"token\");\n\n        const userId = this.props.match.params.userId;\n        const prevUserId = prevProps.match.params.userId;\n\n        if(userId !== prevUserId) {\n\n            socket.off(\"feedPostUpdate\");\n            socket.off(\"feedPostCommentUpdate\");\n            socket.off(\"friendRequestUpdate\");\n            socket.off(\"friendAcceptUpdate\");\n\n            if(!userId) {\n\n                socket.on(\"feedPostUpdate\", () => {\n                \n                    axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                    .then(response => {\n                        \n                        this.setState({\n                            feed: response.data\n                        })\n                    })\n                })\n                \n                socket.on(\"feedPostCommentUpdate\", () => {\n                    axios.get(localUrl + \"/comments/feedComments/\"  + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                    .then(response => {\n                        \n                        this.setState({\n                            feedComments: response.data\n                        })\n                    })\n                })\n\n                socket.on(\"friendRequestUpdate\", () => {\n                    axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}})\n                    .then(response => {\n                        \n                        this.setState({\n                            requests: response.data\n                        })\n                    })\n                })\n    \n                axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}})\n                .then(response => {\n                    \n                    userId = response.data.userId;\n                    console.log(userId)\n    \n                    this.setState({\n                        currentUser: response.data,\n                        profileInfo: response.data,\n                        currentIsProfile: true\n                    }, () => {\n                        console.log(this.state.currentUser)\n                    })\n    \n                    return axios.all([\n                        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/friends\", {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                    ])\n                })\n                .then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse)=> {\n                    console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse)\n                    if(favouritesResponse.data){\n                        this.setState({\n                            favouriteTeams: favouritesResponse.data,\n                            friends: friendsResponse.data,\n                            requests: requestsResponse.data,\n                            feed: feedResponse.data,\n                            feedComments: feedCommentsResponse.data,\n                            isFriend: true\n                        }, () => console.log(\"yess\"))\n                    }\n                    else {\n                        this.setState({\n                            friends: friendsResponse.data,\n                            requests: requestsResponse.data,\n                            feed: feedResponse.data,\n                            feedComments: feedCommentsResponse.data,\n                            isFriend: true\n                        },() =>  console.log(\"yess\"))\n                        \n                    } \n                }))\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n            else {\n\n                socket.on(\"feedPostUpdate\", () => {\n                \n                    axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                    .then(response => {\n                        \n                        this.setState({\n                            feed: response.data\n                        })\n                    })\n                });\n\n                socket.on(\"feedPostCommentUpdate\", () => {\n                    axios.get(localUrl + \"/comments/feedComments/\"  + userId, {headers: {Authorization: `Bearer ${token}`}})\n                    .then(response => {\n                        \n                        this.setState({\n                            feedComments: response.data\n                        })\n                    })\n                });\n\n                socket.on(\"friendAcceptUpdate\", () => {\n                    axios.all([\n                        axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                    ])\n                    .then(axios.spread((isFriendResponse, favouritesResponse) => {\n                        this.setState({\n                            isFriend: isFriendResponse.data,\n                            favouriteTeams: favouritesResponse.data\n                        })\n                    }))\n                });\n\n                axios.all([\n                    axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n                .then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, \n                    friendsResponse, feedResponse, feedCommentsResponse)=> {\n                    if(favouritesResponse.data){\n                        this.setState({\n                            favouriteTeams: favouritesResponse.data,\n                            currentUser: currentUserResponse.data,\n                            profileInfo: profileResponse.data,\n                            currentIsProfile: false,\n                            friends: friendsResponse.data,\n                            feed: feedResponse.data,\n                            feedComments: feedCommentsResponse.data,\n                        })\n                    }\n                    else {\n                        this.setState({\n                            currentUser: currentUserResponse.data,\n                            profileInfo: profileResponse.data,\n                            currentIsProfile: false,\n                            friends: friendsResponse.data,\n                            feed: feedResponse.data,\n                            feedComments: feedCommentsResponse.data,\n                        })\n                        \n                    } \n                \n                    return axios.all([\n                        axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                        axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                    ])\n                }))\n                .then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n        \n                    this.setState({\n                        isFriend: isFriendResponse.data.isFriend,\n                        isRequestSent: isSentResponse.data.isRequestSent,\n                        isRequestReceived: isRecievedResponse.data.isRequestReceived\n                    })\n                }))\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        } \n    }\n\n    componentWillUnmount() {\n\n        socket.off(\"feedPostUpdate\");\n        socket.off(\"feedPostCommentUpdate\");\n    }\n\n    taskDisplayTeam = (teamId) => {\n        axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId)\n        .then(response => {\n            const selectedTeam = response.data.teams[0];\n\n            this.setState({\n                selectedTeam: selectedTeam,\n                detailsEnabled: true\n            })\n        })\n    }\n\n    taskEndDisplayTeam = () => {\n        \n        this.setState({\n            detailsEnabled: false\n        })\n    }\n\n    taskUpdateFavourites = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            \n            if(response.data){\n                this.setState({\n                    favouriteTeams: response.data\n                })\n            }\n            else {\n                this.setState({\n                    favouriteTeams: []\n                })\n            } \n\n        })\n    }\n\n    taskSendFriendRequest = () => {\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = profileInfo.userId;\n\n        axios.post(localUrl + '/requests', {userId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n            \n            this.setState({\n                isRequestSent: true\n            }, () => {\n\n                socket.emit(\"friendRequest\");\n            })\n        })\n    }\n\n    taskAcceptFriendRequest = () => {\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const requestorId = profileInfo.userId;\n\n        axios.post(localUrl + '/requests/acceptRequest', {requestorId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            this.setState({\n                isFriend: true\n            }, () => {\n\n                socket.emit(\"friendAccept\");\n            })\n        })\n    }\n\n    taskAddPost = (event) => {\n\n        event.preventDefault();\n\n        const {profileInfo} = this.state;\n    \n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentType = \"comment\";\n        const userId = profileInfo.userId;\n        \n        const commentData = {\n            userId, \n            commentText, \n            contentType\n        }\n        \n        axios.post(localUrl + \"/feed\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            this.setState({\n                feed: response.data\n            }, () => {\n                event.target.reset();\n\n                socket.emit(\"feedPost\", {feed: response.data});\n            })\n        })\n\n    }\n\n    taskAddCommentToPost = (event) => {\n\n        event.preventDefault();\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = profileInfo.userId;\n\n        const commentText = event.target.commentText.value;\n        const contentId = event.target.contentId.value;\n        const contentType = event.target.contentType.value;\n        const receiverId = event.target.receiverId.value;\n\n        const feedCommentData = {\n            contentId, \n            contentType, \n            commentText, \n            receiverId\n        }\n\n        axios.post(localUrl + \"/comments\", feedCommentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            return axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n        })\n        .then(response => {\n\n            this.setState({\n                feedComments: response.data\n            }, () => {\n\n                event.target.reset();\n                socket.emit(\"feedPostComment\", {feedComments: response.data})\n            })\n        })\n    }\n\n    taskTakeToGamePage = (idEvent) => {\n\n        this.props.history.push('/game/' + idEvent);\n    }\n\n    render () {\n\n        const {favouriteTeams, selectedTeam, detailsEnabled, \n            pastEvents, articles, profileInfo, currentUser, currentIsProfile, friends, requests, isFriend, \n            isRequestSent, isRequestReceived, feed, feedComments} = this.state;\n\n        return(\n            <main className=\"user\">\n                <div className=\"user__profile user-profile\">\n                    <Avatar \n                        className=\"user-profile__avatar\" \n                        avatarUrl={profileInfo.imgUrl} \n                    />\n                    <div className=\"user-profile__info\">\n                        <h3 className=\"profile__name\">{profileInfo.name} {profileInfo.lastName}</h3>\n                        <p className=\"profile__date\">Joined {timeDifference(profileInfo.timestamp)}</p>\n                        <p className=\"profile__description\">{profileInfo.description}</p>\n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={homeIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">Lives in <span className=\"profile__bold\">{profileInfo.location}</span></p>\n                        </div> \n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={locationIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">From <span className=\"profile__bold\">{profileInfo.from}</span></p>\n                        </div>\n                        {!currentIsProfile && \n                            <div className=\"user-profile__info-buttons\">\n                                {isFriend === null\n                                    ?\n                                    <div></div>\n                                    :\n                                    <IsFriend \n                                        className=\"\"\n                                        isFriend={isFriend}\n                                        isRequestSent={isRequestSent}\n                                        isRequestReceived={isRequestReceived}\n                                        taskSendFriendRequest={this.taskSendFriendRequest}\n                                        taskAcceptFriendRequest={this.taskAcceptFriendRequest}\n                                    />\n                                }\n                            </div>\n                        }\n                    </div>\n                </div>\n                {isFriend === null\n                    ?\n                    <div></div>\n                    :\n                    (isFriend === true\n                        ?\n                        <div className=\"user__profile-details\">\n                            <div className=\"user__interaction user-interaction\">\n                                <div className=\"interaction__favourites\">\n                                    {favouriteTeams.map(team => {\n                                        return (\n                                            <TeamCard \n                                                className=\"user-interaction__fav-card\" \n                                                taskDisplayTeam={this.taskDisplayTeam}\n                                                strTeamBadge={team.strTeamBadge}\n                                                teamId={team.idTeam} \n                                            />\n                                        )\n                                    })} \n                                </div>\n                                <div className=\"user-interaction__feed-container\">\n                                    <div className=\"user-interaction__feed feed\">\n                                        <div className=\"feed__card\">\n                                            {currentIsProfile\n                                            ?\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={currentUser.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`What is on your mind?`}\n                                            />\n                                            :\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={currentUser.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`Write something to ${profileInfo.name}...`}\n                                            />\n                                            }\n                                        </div>\n                                        {feed.map(feedContent => {\n                                            return (\n                                                <FeedCard \n                                                    className=\"feed__card\"\n                                                    feedContent={feedContent}\n                                                    feedComments={feedComments}\n                                                    taskTakeToGamePage={this.taskTakeToGamePage}\n                                                    taskAddCommentToPost={this.taskAddCommentToPost}\n                                                    userAvatar={currentUser.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user__updates user-updates\">\n                                <div className=\"user-updates__container\">\n                                    {pastEvents.map(event => {\n                                        return <EventScore event={event} />\n                                    })}\n                                </div>\n                                <div className=\"user-updates__container\">\n                                    {articles.map(article => {\n                                        return (\n                                            <NewsArticle \n                                                className=\"team__news-article\" \n                                                newsArticle={article} \n                                            />\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"user__friends user-friends\">\n                                <div className=\"user-friends__wrapper\">\n                                    <div className=\"user-friends__container\">\n                                        <h3 className=\"friends__title\">Friends</h3>\n                                        {friends.map(friend => {\n                                            return(\n                                                <Link key={friend.friendId} to={\"/user/\" + friend.friendId}>\n                                                    <ProfileImage \n                                                        className=\"friends__avatar\"\n                                                        imgSrc={friend.imgUrl}\n                                                    />\n                                                </Link>\n                                            )\n                                        })}\n                                    </div>\n                                    <div className=\"friends__request-container\">\n                                        <h3 className=\"friends__title\">Requests</h3>\n                                        {requests.map(request => {\n                                            return(\n                                                <Link key={request.requestorId} to={\"/user/\" + request.requestorId}>\n                                                    <ProfileImage \n                                                        key={request.requestorId}\n                                                        className=\"friends__avatar\"\n                                                        imgSrc={request.imgUrl}\n                                                    />\n                                                </Link>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            {detailsEnabled && \n                                <TeamDetails \n                                    team={selectedTeam} \n                                    taskEndDisplayTeam={this.taskEndDisplayTeam}\n                                    taskUpdateFavourites={this.taskUpdateFavourites}\n                                />\n                            }\n                        </div>\n                        :\n                        <div className=\"user__private user-private\">\n                            <div className=\"user-private__wrapper\">\n                                <img className=\"user-private__img\" src={lockIcon} alt=\"lock\"/>\n                                <div className=\"user-private__card\">    \n                                    <h3 className=\"user-private__title\">This Account is Private</h3>\n                                    <p className=\"user-private__text\">Send a friend request to this account to see their details.</p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n                \n                \n            </main>\n        )\n    }\n    \n}\n\nexport default ActualUserPage;"]},"metadata":{},"sourceType":"module"}