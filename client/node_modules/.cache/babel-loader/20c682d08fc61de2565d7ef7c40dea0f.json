{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/App.js\";\nimport './App.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Redirect, Switch, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SearchPage from './pages/SearchPage/SearchPage';\nimport GamePage from './pages/GamePage/GamePage';\nimport HomePage from './pages/HomePage/HomePage';\nimport UserPage from './pages/UserPage/UserPage';\nimport ActualUserPage from './pages/ActualUserPage/ActualUserPage';\nimport Header from './components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem(\"token\");\nconst localUrl = \"http://localhost:8686\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false,\n      currentUser: null,\n      url: \"\"\n    };\n\n    this.taskLogin = event => {\n      event.preventDefault();\n      const userName = event.target.userName.value;\n      const password = event.target.password.value;\n      const loginCredentials = {\n        userName,\n        password\n      };\n      axios.post(localUrl + \"/login\", loginCredentials).then(response => {\n        const token = response.data.token;\n        sessionStorage.setItem(\"token\", token);\n        return axios.get(localUrl + \"/users\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          loggedIn: true,\n          currentUser: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.taskUpdateUrl = url => {\n      this.setState({\n        url: url\n      });\n    };\n  }\n\n  componentDidMount(_prevProsp, prevState) {\n    console.log(prevState); //checking if logged in\n\n    if (token) {\n      axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          loggedIn: true,\n          currentUser: response.data\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      loggedIn,\n      currentUser,\n      url\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        imgUrl: currentUser && currentUser.imgUrl,\n        url: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [!loggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: routerProps => /*#__PURE__*/_jsxDEV(LoginPage, {\n            taskLogin: this.taskLogin,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          render: routerProps => /*#__PURE__*/_jsxDEV(HomePage, {\n            taskUpdateUrl: this.taskUpdateUrl,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/:userId\",\n          render: routerProps => /*#__PURE__*/_jsxDEV(ActualUserPage, {\n            taskUpdateUrl: this.taskUpdateUrl,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 26\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          render: routerProps => /*#__PURE__*/_jsxDEV(ActualUserPage, {\n            taskUpdateUrl: this.taskUpdateUrl,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/game/:videoId\",\n          render: routerProps => /*#__PURE__*/_jsxDEV(GamePage, {\n            taskUpdateUrl: this.taskUpdateUrl,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }, this), loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/App.js"],"names":["React","axios","BrowserRouter","Redirect","Switch","Route","LoginPage","SearchPage","GamePage","HomePage","UserPage","ActualUserPage","Header","token","sessionStorage","getItem","localUrl","App","Component","state","loggedIn","currentUser","url","taskLogin","event","preventDefault","userName","target","value","password","loginCredentials","post","then","response","data","setItem","get","headers","Authorization","setState","catch","error","console","log","taskUpdateUrl","componentDidMount","_prevProsp","prevState","render","imgUrl","routerProps"],"mappings":"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","sourcesContent":["import './App.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport {BrowserRouter, Redirect, Switch, Route} from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SearchPage from './pages/SearchPage/SearchPage';\nimport GamePage from './pages/GamePage/GamePage';\nimport HomePage from './pages/HomePage/HomePage';\nimport UserPage from './pages/UserPage/UserPage';\nimport ActualUserPage from './pages/ActualUserPage/ActualUserPage';\n\nimport Header from './components/Header/Header';\n\nconst token = sessionStorage.getItem(\"token\");\nconst localUrl = \"http://localhost:8686\"\n\nclass App extends React.Component {\n\n  state = {\n    loggedIn: false,\n    currentUser: null,\n    url: \"\"\n  }\n\n  componentDidMount(_prevProsp, prevState) {\n    \n    console.log(prevState);\n\n    //checking if logged in\n    if(token) {\n\n      axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}})\n      .then(response => {\n\n        this.setState({\n          loggedIn: true,\n          currentUser: response.data\n        })\n\n      })\n    }\n\n  }\n\n  taskLogin = (event) => {\n    \n    event.preventDefault();\n    \n    const userName = event.target.userName.value;\n    const password = event.target.password.value;\n    \n    const loginCredentials = {\n      userName,\n      password\n    }\n\n    axios.post(localUrl + \"/login\", loginCredentials)\n    .then(response => {\n      const token = response.data.token;\n      sessionStorage.setItem(\"token\", token);\n      \n      return axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}})\n    })\n    .then(response => {\n      \n      this.setState({\n        loggedIn: true,\n        currentUser: response.data\n      })\n    })\n    .catch(error => {\n\n      console.log(error);\n    })\n\n  }\n\n  taskUpdateUrl = (url) => {\n\n    this.setState({\n      url: url\n    })\n\n  }\n\n  render() {\n\n    const {loggedIn, currentUser, url} = this.state;\n    \n    return (\n      <BrowserRouter>\n        <Header \n          loggedIn={loggedIn} \n          imgUrl={currentUser && currentUser.imgUrl} \n          url={url}\n        />\n        <Switch>\n            {!loggedIn && <Route path=\"/login\" render={(routerProps) => <LoginPage taskLogin={this.taskLogin} {...routerProps}/> } />}\n            {loggedIn && <Route path=\"/home\" render={(routerProps) => <HomePage taskUpdateUrl={this.taskUpdateUrl} {...routerProps}/> } />}\n            {loggedIn && <Route path=\"/user/:userId\" render={(routerProps) => <ActualUserPage taskUpdateUrl={this.taskUpdateUrl} {...routerProps}/> } />}\n            {loggedIn && <Route path=\"/search\" render={(routerProps) => <ActualUserPage taskUpdateUrl={this.taskUpdateUrl} {...routerProps}/> } />}\n            {loggedIn && <Route path=\"/game/:videoId\" render={(routerProps) => <GamePage taskUpdateUrl={this.taskUpdateUrl} {...routerProps}/> } />}\n            {loggedIn ? <Redirect to=\"/home\"/> : <Redirect to=\"/login\"/>}\n        </Switch>\n      </BrowserRouter>\n    );\n  } \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}