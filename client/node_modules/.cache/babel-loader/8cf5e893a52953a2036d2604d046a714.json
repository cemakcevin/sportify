{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/GamePage/GamePage.js\";\nimport './GamePage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport VideoMain from '../../components/VideoMain/VideoMain';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport VideoBox from '../../components/VideoBox/VideoBox';\nimport ContentShare from '../../components/ContentShare/ContentShare';\nimport videoWatchToEmbed from '../../functions/videoWatchToEmbed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localUrl = \"http://localhost:8686\";\n\nclass GamePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      strVideo: \"\",\n      currentEvent: {},\n      pastLeagueEvents: [],\n      videoComments: [],\n      currentUser: {},\n      videoShare: true,\n      friends: [],\n      filteredFriends: [],\n      searchedValue: \"\"\n    };\n\n    this.taskSubmitComment = event => {\n      event.preventDefault();\n      const commentText = event.target.comment.value;\n      const contentType = \"game\";\n      const contentId = this.props.match.params.videoId;\n      const token = sessionStorage.getItem(\"token\");\n      const commentData = {\n        contentId,\n        contentType,\n        commentText\n      };\n      axios.post(localUrl + \"/comments\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        return axios.get(localUrl + \"/comments/\" + contentType + \"/\" + contentId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          videoComments: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      event.target.reset();\n    };\n\n    this.taskChangeVideo = (videoId, _videoSrc) => {\n      this.props.history.push('/game/' + videoId);\n    };\n\n    this.taskShareVideo = () => {\n      this.setState({\n        videoShare: true\n      });\n    };\n\n    this.taskCancelVideoShare = () => {\n      this.setState({\n        videoShare: false\n      });\n    };\n\n    this.taskFilterFriends = event => {\n      const {\n        friends\n      } = this.state;\n      const searchedName = event.target.name.value;\n      console.log(event.target.name.value);\n      const filteredFriends = friends.filter(friend => {\n        if (friend.friendName.includes(searchedName)) {\n          return true;\n        }\n\n        return false;\n      });\n      this.setState({\n        filteredFriends: filteredFriends\n      });\n    };\n  }\n\n  componentDidMount() {\n    const videoId = this.props.match.params.videoId;\n    const token = sessionStorage.getItem(\"token\");\n    axios.all([axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId), axios.get(localUrl + \"/comments/game/\" + videoId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(localUrl + \"/friends\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })]).then(axios.spread((responseEvent, responseComments, responseUsers, responseFriends) => {\n      const currentEvent = responseEvent.data.events[0];\n      const videoComments = responseComments.data;\n      const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo);\n      const leagueId = currentEvent.idLeague;\n      const currentUser = responseUsers.data;\n      const friends = responseFriends.data;\n\n      if (videoComments) {\n        this.setState({\n          strVideo: strVideo,\n          currentEvent: currentEvent,\n          videoComments: videoComments,\n          currentUser: currentUser,\n          friends: friends,\n          filteredFriends: friends\n        });\n      } else {\n        this.setState({\n          strVideo: strVideo,\n          currentEvent: currentEvent,\n          currentUser: currentUser,\n          friends: friends,\n          filteredFriends: friends\n        });\n      }\n\n      return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId);\n    })).then(response => {\n      const pastLeagueEvents = response.data.events;\n      this.setState({\n        pastLeagueEvents: pastLeagueEvents\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const videoId = this.props.match.params.videoId;\n    const prevVideoId = prevProps.match.params.videoId;\n    console.log(prevVideoId, \"and\", videoId);\n\n    if (videoId !== prevVideoId) {\n      const token = sessionStorage.getItem(\"token\");\n      axios.all([axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId), axios.get(localUrl + \"/comments/game/\" + videoId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]).then(axios.spread((responseEvent, responseComments) => {\n        const currentEvent = responseEvent.data.events[0];\n        const videoComments = responseComments.data;\n        const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo);\n        const leagueId = currentEvent.idLeague;\n\n        if (videoComments) {\n          this.setState({\n            strVideo: strVideo,\n            currentEvent: currentEvent,\n            videoComments: videoComments\n          });\n        } else {\n          this.setState({\n            strVideo: strVideo,\n            currentEvent: currentEvent\n          });\n        }\n\n        return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId);\n      })).then(response => {\n        let pastLeagueEvents = response.data.events;\n        pastLeagueEvents = pastLeagueEvents.filter(event => {\n          if (event.idEvent === videoId) {\n            return false;\n          }\n\n          return true;\n        });\n        this.setState({\n          pastLeagueEvents: pastLeagueEvents\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      strVideo,\n      currentEvent,\n      pastLeagueEvents,\n      videoComments,\n      currentUser,\n      videoShare,\n      filteredFriends\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(VideoMain, {\n        className: \"game__video\",\n        videoSrc: strVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"game__info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game__info-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n            className: \"game__video-info\",\n            currentEvent: currentEvent,\n            currentUser: currentUser,\n            comments: videoComments,\n            taskSubmitComment: this.taskSubmitComment,\n            taskShareVideo: this.taskShareVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game__side-videos-container\",\n            children: pastLeagueEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(VideoBox, {\n                videoSrc: event.strVideo,\n                videoName: event.strFilename,\n                videoId: event.idEvent,\n                onClick: this.taskChangeVideo\n              }, event.idEvent, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), videoShare && /*#__PURE__*/_jsxDEV(ContentShare, {\n        className: \"game__videoshare\",\n        taskCancelContentShare: this.taskCancelVideoShare,\n        taskFilterFriends: this.taskFilterFriends,\n        friends: filteredFriends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GamePage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/GamePage/GamePage.js"],"names":["React","axios","VideoMain","VideoInfo","VideoBox","ContentShare","videoWatchToEmbed","localUrl","GamePage","Component","state","strVideo","currentEvent","pastLeagueEvents","videoComments","currentUser","videoShare","friends","filteredFriends","searchedValue","taskSubmitComment","event","preventDefault","commentText","target","comment","value","contentType","contentId","props","match","params","videoId","token","sessionStorage","getItem","commentData","post","headers","Authorization","then","_response","get","response","setState","data","catch","error","console","log","reset","taskChangeVideo","_videoSrc","history","push","taskShareVideo","taskCancelVideoShare","taskFilterFriends","searchedName","name","filter","friend","friendName","includes","componentDidMount","all","spread","responseEvent","responseComments","responseUsers","responseFriends","events","leagueId","idLeague","componentDidUpdate","prevProps","prevState","prevVideoId","idEvent","render","map","strFilename"],"mappings":"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","sourcesContent":["import './GamePage.scss';\nimport React from 'react';\nimport axios from 'axios';\n\nimport VideoMain from '../../components/VideoMain/VideoMain';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport VideoBox from '../../components/VideoBox/VideoBox';\nimport ContentShare from '../../components/ContentShare/ContentShare';\n\nimport videoWatchToEmbed from '../../functions/videoWatchToEmbed';\n\nconst localUrl = \"http://localhost:8686\";\n\nclass GamePage extends React.Component {\n\n    state = {\n        strVideo: \"\",\n        currentEvent: {},\n        pastLeagueEvents: [],\n        videoComments:[],\n        currentUser: {},\n        videoShare: true,\n        friends: [],\n        filteredFriends: [],\n        searchedValue: \"\"\n    }\n\n    componentDidMount() {\n\n        const videoId = this.props.match.params.videoId;\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.all([\n            axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId),\n            axios.get(localUrl + \"/comments/game/\" + videoId, {headers: {Authorization: `Bearer ${token}`}}),   \n            axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n            axios.get(localUrl + \"/friends\", {headers: {Authorization: `Bearer ${token}`}}) \n        ])\n        .then(axios.spread((responseEvent, responseComments, responseUsers, responseFriends) => {\n            \n            const currentEvent = responseEvent.data.events[0];\n            const videoComments = responseComments.data;\n            const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo)\n            const leagueId = currentEvent.idLeague;\n            const currentUser = responseUsers.data;\n            const friends = responseFriends.data;\n\n            if(videoComments) {\n                this.setState({\n                    strVideo: strVideo,\n                    currentEvent: currentEvent,\n                    videoComments: videoComments,\n                    currentUser: currentUser,\n                    friends: friends,\n                    filteredFriends: friends\n                })\n            }\n            else {\n                this.setState({\n                    strVideo: strVideo,\n                    currentEvent: currentEvent,\n                    currentUser: currentUser,\n                    friends: friends,\n                    filteredFriends: friends\n                })\n            }\n            \n\n            return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId)\n        }))\n        .then(response => {\n            const pastLeagueEvents = response.data.events;\n\n            this.setState({\n                pastLeagueEvents: pastLeagueEvents\n            })\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const videoId = this.props.match.params.videoId;\n        const prevVideoId = prevProps.match.params.videoId;\n\n        console.log(prevVideoId, \"and\", videoId)\n\n        if(videoId !== prevVideoId) {\n            \n            const token = sessionStorage.getItem(\"token\");\n\n            axios.all([\n                axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupevent.php?id=\" + videoId),\n                axios.get(localUrl + \"/comments/game/\" + videoId, {headers: {Authorization: `Bearer ${token}`}})   \n            ])\n            .then(axios.spread((responseEvent, responseComments) => {\n                \n                const currentEvent = responseEvent.data.events[0];\n                const videoComments = responseComments.data;\n                const strVideo = currentEvent.strVideo && videoWatchToEmbed(currentEvent.strVideo)\n                const leagueId = currentEvent.idLeague;\n    \n                if(videoComments) {\n                    this.setState({\n                        strVideo: strVideo,\n                        currentEvent: currentEvent,\n                        videoComments: videoComments\n                    })\n                }\n                else {\n                    this.setState({\n                        strVideo: strVideo,\n                        currentEvent: currentEvent,\n                    })\n                }\n                \n    \n                return axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventspastleague.php?id=\" + leagueId)\n            }))\n            .then(response => {\n                let pastLeagueEvents = response.data.events;\n    \n                pastLeagueEvents = pastLeagueEvents.filter(event => {\n\n                    if(event.idEvent === videoId) {\n                        return false;\n                    }\n\n                    return true;\n                })\n\n                this.setState({\n                    pastLeagueEvents: pastLeagueEvents\n                })\n            })\n        }\n\n        \n    }\n\n    taskSubmitComment = (event) => {\n\n        event.preventDefault();\n\n        const commentText = event.target.comment.value;\n        const contentType = \"game\";\n        const contentId = this.props.match.params.videoId;\n        const token = sessionStorage.getItem(\"token\");\n\n        const commentData = {\n            contentId,\n            contentType,\n            commentText\n        }\n\n        axios.post(localUrl + \"/comments\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n            \n            return axios.get(localUrl + \"/comments/\" + contentType + \"/\" + contentId, {headers: {Authorization: `Bearer ${token}`}})\n        })\n        .then(response => {\n\n            this.setState({\n                videoComments: response.data\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        })\n\n        event.target.reset();\n\n    }\n\n    taskChangeVideo = (videoId, _videoSrc) => {\n        this.props.history.push('/game/' + videoId)\n    }\n\n    taskShareVideo = () => {\n\n        this.setState({\n            videoShare: true\n        })\n    }\n\n    taskCancelVideoShare = () => {\n\n        this.setState({\n            videoShare: false\n        })\n    }\n\n    taskFilterFriends = (event) => {\n        const {friends} = this.state;\n        const searchedName = event.target.name.value;\n        console.log(event.target.name.value);\n\n        const filteredFriends = friends.filter(friend => {\n\n            if(friend.friendName.includes(searchedName)){\n                return true;\n            }\n\n            return false;\n        })\n\n        this.setState({\n            filteredFriends: filteredFriends\n        })\n    }\n\n    render () {\n\n        const {strVideo, currentEvent, pastLeagueEvents, videoComments, currentUser, videoShare, filteredFriends} = this.state;\n\n        return (\n            <main className=\"game\">\n                <VideoMain \n                    className=\"game__video\"\n                    videoSrc={strVideo}\n                />\n                <section className=\"game__info\">\n                    <div className=\"game__info-wrapper\">\n                        <VideoInfo \n                            className=\"game__video-info\" \n                            currentEvent={currentEvent}\n                            currentUser={currentUser}\n                            comments={videoComments}\n                            taskSubmitComment={this.taskSubmitComment}\n                            taskShareVideo={this.taskShareVideo}\n                        />\n                        <div className=\"game__side-videos-container\">\n                            {pastLeagueEvents.map(event => {\n                                return(\n                                    <VideoBox \n                                        key={event.idEvent}\n                                        videoSrc={event.strVideo} \n                                        videoName={event.strFilename}\n                                        videoId={event.idEvent}\n                                        onClick={this.taskChangeVideo}\n                                    />)\n                            })}\n                        </div>\n                    </div>\n                </section>\n                {videoShare && \n                    <ContentShare \n                        className=\"game__videoshare\"\n                        taskCancelContentShare={this.taskCancelVideoShare}\n                        taskFilterFriends={this.taskFilterFriends}\n                        friends={filteredFriends}\n                    />\n                }  \n            </main>\n        )\n    }\n}\n\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}