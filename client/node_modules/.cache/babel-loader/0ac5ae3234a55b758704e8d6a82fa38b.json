{"ast":null,"code":"var _jsxFileName = \"/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js\";\nimport './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\nimport timeDifference from '../../functions/timeDifference';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API__KEY = \"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\nclass ActualUserPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      favouriteTeams: [],\n      selectedTeam: null,\n      detailsEnabled: false,\n      pastEvents: [],\n      articles: [],\n      currentUser: {},\n      profileInfo: {},\n      currentIsProfile: null,\n      friends: [],\n      requests: [],\n      isFriend: null,\n      isRequestSent: false,\n      isRequestReceived: false,\n      feed: [],\n      feedComments: []\n    };\n\n    this.taskDisplayTeam = teamId => {\n      axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId).then(response => {\n        const selectedTeam = response.data.teams[0];\n        this.setState({\n          selectedTeam: selectedTeam,\n          detailsEnabled: true\n        });\n      });\n    };\n\n    this.taskEndDisplayTeam = () => {\n      this.setState({\n        detailsEnabled: false\n      });\n    };\n\n    this.taskUpdateFavourites = () => {\n      const token = sessionStorage.getItem(\"token\");\n      axios.get(localUrl + \"/favourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.data) {\n          this.setState({\n            favouriteTeams: response.data\n          });\n        } else {\n          this.setState({\n            favouriteTeams: []\n          });\n        }\n      });\n    };\n\n    this.taskSendFriendRequest = () => {\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const userId = profileInfo.userId;\n      axios.post(localUrl + '/requests', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isRequestSent: true\n        });\n      });\n    };\n\n    this.taskAcceptFriendRequest = () => {\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const requestorId = profileInfo.userId;\n      axios.post(localUrl + '/requests/acceptRequest', {\n        requestorId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        this.setState({\n          isFriend: true\n        });\n      });\n    };\n\n    this.taskAddPost = event => {\n      event.preventDefault();\n      const token = sessionStorage.getItem(\"token\");\n      const commentText = event.target.commentText.value;\n      const contentType = \"comment\";\n      const userId = this.props.match.params.userId;\n      const commentData = {\n        userId,\n        commentText,\n        contentType\n      };\n      axios.post(localUrl + \"/feed\", commentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.setState({\n          feed: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskAddCommentToPost = event => {\n      event.preventDefault();\n      const {\n        profileInfo\n      } = this.state;\n      const token = sessionStorage.getItem(\"token\");\n      const userId = profileInfo.userId;\n      const commentText = event.target.commentText.value;\n      const contentId = event.target.contentId.value;\n      const contentType = event.target.contentType.value;\n      const receiverId = event.target.receiverId.value;\n      const feedCommentData = {\n        contentId,\n        contentType,\n        commentText,\n        receiverId\n      };\n      axios.post(localUrl + \"/comments\", feedCommentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(_response => {\n        return axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }).then(response => {\n        this.setState({\n          feedComments: response.data\n        }, () => {\n          event.target.reset();\n        });\n      });\n    };\n\n    this.taskTakeToGamePage = idEvent => {\n      this.props.history.push('/game/' + idEvent);\n    };\n  }\n\n  componentDidMount() {\n    this.props.taskUpdateUrl(this.props.match.url);\n    const token = sessionStorage.getItem(\"token\");\n    let userId = this.props.match.params.userId;\n    console.log(userId);\n\n    if (!userId) {\n      console.log(userId);\n      axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        userId = response.data.userId;\n        console.log(userId);\n        this.setState({\n          currentUser: response.data,\n          profileInfo: response.data,\n          currentIsProfile: true\n        }, () => {\n          console.log(this.state.currentUser);\n        });\n        return axios.all([axios.get(localUrl + \"/favourites\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/friends\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/feed/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      }).then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse) => {\n        console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse);\n\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            friends: friendsResponse.data,\n            requests: requestsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data,\n            isFriend: true\n          }, () => console.log(\"yess\"));\n        } else {\n          this.setState({\n            friends: friendsResponse.data,\n            requests: requestsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data,\n            isFriend: true\n          }, () => console.log(\"yess\"));\n        }\n      })).catch(error => {\n        console.log(error);\n      });\n    } else {\n      axios.all([axios.get(localUrl + \"/favourites/user/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/friends/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/feed/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(localUrl + \"/comments/feedComments/\" + userId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]).then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, friendsResponse, feedResponse, feedCommentsResponse) => {\n        if (favouritesResponse.data) {\n          this.setState({\n            favouriteTeams: favouritesResponse.data,\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        } else {\n          this.setState({\n            currentUser: currentUserResponse.data,\n            profileInfo: profileResponse.data,\n            friends: friendsResponse.data,\n            feed: feedResponse.data,\n            feedComments: feedCommentsResponse.data\n          });\n        }\n\n        return axios.all([axios.get(localUrl + \"/friends/isFriend/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n      })).then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n        this.setState({\n          isFriend: isFriendResponse.data.isFriend,\n          isRequestSent: isSentResponse.data.isRequestSent,\n          isRequestReceived: isRecievedResponse.data.isRequestReceived\n        });\n      })).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  componentDidUpdate(prevPros, prevState) {\n    console.log(prevPros.match); //     const {index, favouriteTeams, pastEvents, articles} = this.state;\n    //     console.log(index)\n    //     if(index < favouriteTeams.length) {\n    //         const teamId = favouriteTeams[index].idTeam;\n    //         const teamName = favouriteTeams[index].strTeam;\n    //         setTimeout(axios.all([\n    //             axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n    //             axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n    //         ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n    //             let newPastEvents = pastEventsResponse.data.results;\n    //             let newArticles = teamNewsResponse.data.articles;\n    //             newPastEvents = newPastEvents.map(event => {\n    //                 const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n    //                 return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             })\n    //             newArticles = newArticles.map(article => {\n    //                 const {title, image, url} = article;\n    //                 return {title, image, url};\n    //             })\n    //             // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n    //             // const {title, image, url} = teamNewsResponse.data.articles;\n    //             // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             // const newArticles = {title, image, url};\n    //             this.setState({\n    //                 index: index + 1,\n    //                 pastEvents: [...pastEvents, ...newPastEvents],\n    //                 articles: [...articles, ...newArticles]\n    //             })\n    //         })) ,1000)\n    //     }\n  }\n\n  render() {\n    const {\n      favouriteTeams,\n      selectedTeam,\n      detailsEnabled,\n      pastEvents,\n      articles,\n      profileInfo,\n      currentUser,\n      currentIsProfile,\n      friends,\n      requests,\n      isFriend,\n      isRequestSent,\n      isRequestReceived,\n      feed,\n      feedComments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"user-profile__avatar\",\n          avatarUrl: profileInfo.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile__name\",\n            children: [profileInfo.name, \" \", profileInfo.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__date\",\n            children: [\"Joined \", timeDifference(profileInfo.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: profileInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: homeIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"Lives in \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__location-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__location-icon\",\n              src: locationIcon,\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__location\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"profile__bold\",\n                children: profileInfo.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this), !currentIsProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile__info-buttons\",\n            children: isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(IsFriend, {\n              className: \"\",\n              isFriend: isFriend,\n              isRequestSent: isRequestSent,\n              isRequestReceived: isRequestReceived,\n              taskSendFriendRequest: this.taskSendFriendRequest,\n              taskAcceptFriendRequest: this.taskAcceptFriendRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), isFriend === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this) : isFriend === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__interaction user-interaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction__favourites\",\n            children: favouriteTeams.map(team => {\n              return /*#__PURE__*/_jsxDEV(TeamCard, {\n                className: \"user-interaction__fav-card\",\n                taskDisplayTeam: this.taskDisplayTeam,\n                strTeamBadge: team.strTeamBadge,\n                teamId: team.idTeam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-interaction__feed-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-interaction__feed feed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed__card\",\n                children: currentIsProfile ? /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: currentUser.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `What is on your mind?`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(FeedForm, {\n                  className: \"feed__form\",\n                  onSubmit: this.taskAddPost,\n                  profileUrl: currentUser.imgUrl,\n                  feedTitle: `${profileInfo.name}'s Feed`,\n                  placeholder: `Write something to ${profileInfo.name}...`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 41\n              }, this), feed.map(feedContent => {\n                return /*#__PURE__*/_jsxDEV(FeedCard, {\n                  className: \"feed__card\",\n                  feedContent: feedContent,\n                  feedComments: feedComments,\n                  taskTakeToGamePage: this.taskTakeToGamePage,\n                  taskAddCommentToPost: this.taskAddCommentToPost,\n                  userAvatar: currentUser.imgUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__updates user-updates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: pastEvents.map(event => {\n              return /*#__PURE__*/_jsxDEV(EventScore, {\n                event: event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-updates__container\",\n            children: articles.map(article => {\n              return /*#__PURE__*/_jsxDEV(NewsArticle, {\n                className: \"team__news-article\",\n                newsArticle: article\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__friends user-friends\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-friends__wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-friends__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 41\n              }, this), friends.map(friend => {\n                return /*#__PURE__*/_jsxDEV(ProfileImage, {\n                  className: \"user-friends__avatar\",\n                  imgSrc: friend.imgUrl\n                }, friend.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"friends__request-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"friends__title\",\n                children: \"Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this), requests.map(request => {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/user/\" + request.requestorId,\n                  children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n                    className: \"friends__avatar\",\n                    imgSrc: request.imgUrl\n                  }, request.requestorId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 53\n                  }, this)\n                }, request.requestorId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 29\n        }, this), detailsEnabled && /*#__PURE__*/_jsxDEV(TeamDetails, {\n          team: selectedTeam,\n          taskEndDisplayTeam: this.taskEndDisplayTeam,\n          taskUpdateFavourites: this.taskUpdateFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__private user-private\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-private__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"user-private__img\",\n            src: lockIcon,\n            alt: \"lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-private__card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"user-private__title\",\n              children: \"This Account is Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-private__text\",\n              children: \"Send a friend request to this account to see their details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ActualUserPage;","map":{"version":3,"sources":["/Users/cemakcevin/Desktop/Cem/Code/BrainStation/cem-akcevin-capstone/sportify/client/src/pages/ActualUserPage/ActualUserPage.js"],"names":["React","axios","Link","Avatar","TeamCard","TeamDetails","EventScore","NewsArticle","ProfileImage","IsFriend","FeedForm","FeedCard","lockIcon","homeIcon","locationIcon","timeDifference","API__KEY","localUrl","ActualUserPage","Component","state","index","favouriteTeams","selectedTeam","detailsEnabled","pastEvents","articles","currentUser","profileInfo","currentIsProfile","friends","requests","isFriend","isRequestSent","isRequestReceived","feed","feedComments","taskDisplayTeam","teamId","get","then","response","data","teams","setState","taskEndDisplayTeam","taskUpdateFavourites","token","sessionStorage","getItem","headers","Authorization","taskSendFriendRequest","userId","post","_response","taskAcceptFriendRequest","requestorId","taskAddPost","event","preventDefault","commentText","target","value","contentType","props","match","params","commentData","reset","taskAddCommentToPost","contentId","receiverId","feedCommentData","taskTakeToGamePage","idEvent","history","push","componentDidMount","taskUpdateUrl","url","console","log","all","spread","favouritesResponse","friendsResponse","requestsResponse","feedResponse","feedCommentsResponse","catch","error","profileResponse","currentUserResponse","isFriendResponse","isSentResponse","isRecievedResponse","componentDidUpdate","prevPros","prevState","render","imgUrl","name","lastName","timestamp","description","location","from","map","team","strTeamBadge","idTeam","feedContent","article","friend","request"],"mappings":"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","sourcesContent":["import './ActualUserPage.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport TeamCard from '../../components/TeamCard/TeamCard';\nimport TeamDetails from '../../components/TeamDetails/TeamDetails';\nimport EventScore from '../../components/EventScore/EventScore';\nimport NewsArticle from '../../components/NewsArticle/NewsArticle';\nimport ProfileImage from '../../components/ProfileImage/ProfileImage';\nimport IsFriend from '../../components/IsFriend/IsFriend';\nimport FeedForm from '../../components/FeedForm/FeedForm';\nimport FeedCard from '../../components/FeedCard/FeedCard';\n\nimport lockIcon from '../../assets/icons/lock-icon.png';\nimport homeIcon from '../../assets/icons/home-icon.png';\nimport locationIcon from '../../assets/icons/location-icon.png';\n\nimport timeDifference from '../../functions/timeDifference';\n\n\nconst API__KEY=\"8b0979907442ae756bd39495fb5eebd0\";\nconst localUrl = \"http://localhost:8686\";\n\n\nclass ActualUserPage extends React.Component {\n\n\n    state = {\n        index: 0,\n        favouriteTeams:[],\n        selectedTeam: null,\n        detailsEnabled: false,\n        pastEvents: [],\n        articles: [],\n        currentUser: {},\n        profileInfo: {},\n        currentIsProfile: null,\n        friends: [],\n        requests: [],\n        isFriend: null,\n        isRequestSent: false,\n        isRequestReceived: false,\n        feed: [],\n        feedComments: []\n    }\n\n    componentDidMount() {\n        this.props.taskUpdateUrl(this.props.match.url);\n\n        const token = sessionStorage.getItem(\"token\");\n        let userId = this.props.match.params.userId;\n\n        console.log(userId)\n\n        if(!userId) {\n            console.log(userId);\n\n            axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}})\n            .then(response => {\n                \n                userId = response.data.userId;\n                console.log(userId)\n\n                this.setState({\n                    currentUser: response.data,\n                    profileInfo: response.data,\n                    currentIsProfile: true\n                }, () => {\n                    console.log(this.state.currentUser)\n                })\n\n                return axios.all([\n                    axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/friends\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/feed/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/comments/feedComments/\" + \"currentUser\", {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            })\n            .then(axios.spread((favouritesResponse, friendsResponse, requestsResponse, feedResponse, feedCommentsResponse)=> {\n                console.log(favouritesResponse, friendsResponse, feedResponse, feedCommentsResponse)\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        friends: friendsResponse.data,\n                        requests: requestsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                        isFriend: true\n                    }, () => console.log(\"yess\"))\n                }\n                else {\n                    this.setState({\n                        friends: friendsResponse.data,\n                        requests: requestsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                        isFriend: true\n                    },() =>  console.log(\"yess\"))\n                    \n                } \n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        else {\n            axios.all([\n                axios.get(localUrl + \"/favourites/user/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/users\", {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/friends/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/feed/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n            ])\n            .then(axios.spread((favouritesResponse, profileResponse, currentUserResponse, \n                friendsResponse, feedResponse, feedCommentsResponse)=> {\n                if(favouritesResponse.data){\n                    this.setState({\n                        favouriteTeams: favouritesResponse.data,\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                    })\n                }\n                else {\n                    this.setState({\n                        currentUser: currentUserResponse.data,\n                        profileInfo: profileResponse.data,\n                        friends: friendsResponse.data,\n                        feed: feedResponse.data,\n                        feedComments: feedCommentsResponse.data,\n                    })\n                    \n                } \n            \n                return axios.all([\n                    axios.get(localUrl + \"/friends/isFriend/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestSent/\" + userId, {headers: {Authorization: `Bearer ${token}`}}),\n                    axios.get(localUrl + \"/requests/isRequestReceived/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n                ])\n            }))\n            .then(axios.spread((isFriendResponse, isSentResponse, isRecievedResponse) => {\n    \n                this.setState({\n                    isFriend: isFriendResponse.data.isFriend,\n                    isRequestSent: isSentResponse.data.isRequestSent,\n                    isRequestReceived: isRecievedResponse.data.isRequestReceived\n                })\n            }))\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        \n    }\n\n    componentDidUpdate(prevPros, prevState) {\n\n        console.log(prevPros.match);\n    //     const {index, favouriteTeams, pastEvents, articles} = this.state;\n\n    //     console.log(index)\n    //     if(index < favouriteTeams.length) {\n\n    //         const teamId = favouriteTeams[index].idTeam;\n    //         const teamName = favouriteTeams[index].strTeam;\n\n    //         setTimeout(axios.all([\n    //             axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/eventslast.php?id=\" + teamId),\n    //             axios.get(\"https://gnews.io/api/v4/search?q=\" + teamName + \"&token=\" + API__KEY + \"&lang=en\")\n    //         ]).then(axios.spread((pastEventsResponse, teamNewsResponse) => {\n\n    //             let newPastEvents = pastEventsResponse.data.results;\n    //             let newArticles = teamNewsResponse.data.articles;\n\n    //             newPastEvents = newPastEvents.map(event => {\n    //                 const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = event;\n    //                 return {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             })\n\n    //             newArticles = newArticles.map(article => {\n    //                 const {title, image, url} = article;\n    //                 return {title, image, url};\n    //             })\n\n    //             // const {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename} = pastEventsResponse.data.results;\n    //             // const {title, image, url} = teamNewsResponse.data.articles;\n\n    //             // const newPastEvents = {strHomeTeam, strAwayTeam, intHomeScore, intAwayScore, dateEvent, strVideo, strFilename};\n    //             // const newArticles = {title, image, url};\n\n    //             this.setState({\n    //                 index: index + 1,\n    //                 pastEvents: [...pastEvents, ...newPastEvents],\n    //                 articles: [...articles, ...newArticles]\n    //             })\n    //         })) ,1000)\n            \n\n    //     }\n        \n        \n        \n    }\n\n    taskDisplayTeam = (teamId) => {\n        axios.get(\"https://www.thesportsdb.com/api/v1/json/40130162/lookupteam.php?id=\" + teamId)\n        .then(response => {\n            const selectedTeam = response.data.teams[0];\n\n            this.setState({\n                selectedTeam: selectedTeam,\n                detailsEnabled: true\n            })\n        })\n    }\n\n    taskEndDisplayTeam = () => {\n        \n        this.setState({\n            detailsEnabled: false\n        })\n    }\n\n    taskUpdateFavourites = () => {\n\n        const token = sessionStorage.getItem(\"token\");\n\n        axios.get(localUrl + \"/favourites\", {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            \n            if(response.data){\n                this.setState({\n                    favouriteTeams: response.data\n                })\n            }\n            else {\n                this.setState({\n                    favouriteTeams: []\n                })\n            } \n\n        })\n    }\n\n    taskSendFriendRequest = () => {\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = profileInfo.userId;\n\n        axios.post(localUrl + '/requests', {userId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n            \n            this.setState({\n                isRequestSent: true\n            })\n        })\n    }\n\n    taskAcceptFriendRequest = () => {\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const requestorId = profileInfo.userId;\n\n        axios.post(localUrl + '/requests/acceptRequest', {requestorId}, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            this.setState({\n                isFriend: true\n            })\n        })\n    }\n\n    taskAddPost = (event) => {\n\n        event.preventDefault();\n    \n        const token = sessionStorage.getItem(\"token\");\n\n        const commentText = event.target.commentText.value;\n        const contentType = \"comment\";\n        const userId = this.props.match.params.userId;\n        \n        const commentData = {\n            userId, \n            commentText, \n            contentType\n        }\n        \n        axios.post(localUrl + \"/feed\", commentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(response => {\n            this.setState({\n                feed: response.data\n            }, () => {\n                event.target.reset();\n            })\n        })\n\n    }\n\n    taskAddCommentToPost = (event) => {\n\n        event.preventDefault();\n\n        const {profileInfo} = this.state;\n\n        const token = sessionStorage.getItem(\"token\");\n        const userId = profileInfo.userId;\n\n        const commentText = event.target.commentText.value;\n        const contentId = event.target.contentId.value;\n        const contentType = event.target.contentType.value;\n        const receiverId = event.target.receiverId.value;\n\n        const feedCommentData = {\n            contentId, \n            contentType, \n            commentText, \n            receiverId\n        }\n\n        axios.post(localUrl + \"/comments\", feedCommentData, {headers: {Authorization: `Bearer ${token}`}})\n        .then(_response => {\n\n            return axios.get(localUrl + \"/comments/feedComments/\" + userId, {headers: {Authorization: `Bearer ${token}`}})\n        })\n        .then(response => {\n\n            this.setState({\n                feedComments: response.data\n            }, () => {\n\n                event.target.reset();\n            })\n        })\n    }\n\n    taskTakeToGamePage = (idEvent) => {\n\n        this.props.history.push('/game/' + idEvent);\n    }\n\n    render () {\n\n        const {favouriteTeams, selectedTeam, detailsEnabled, \n            pastEvents, articles, profileInfo, currentUser, currentIsProfile, friends, requests, isFriend, \n            isRequestSent, isRequestReceived, feed, feedComments} = this.state;\n\n        return(\n            <main className=\"user\">\n                <div className=\"user__profile user-profile\">\n                    <Avatar \n                        className=\"user-profile__avatar\" \n                        avatarUrl={profileInfo.imgUrl} \n                    />\n                    <div className=\"user-profile__info\">\n                        <h3 className=\"profile__name\">{profileInfo.name} {profileInfo.lastName}</h3>\n                        <p className=\"profile__date\">Joined {timeDifference(profileInfo.timestamp)}</p>\n                        <p className=\"profile__description\">{profileInfo.description}</p>\n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={homeIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">Lives in <span className=\"profile__bold\">{profileInfo.location}</span></p>\n                        </div> \n                        <div className=\"profile__location-container\">\n                            <img className=\"profile__location-icon\" src={locationIcon} alt=\"location\"/>\n                            <p className=\"profile__location\">From <span className=\"profile__bold\">{profileInfo.from}</span></p>\n                        </div>\n                        {!currentIsProfile && \n                            <div className=\"user-profile__info-buttons\">\n                                {isFriend === null\n                                    ?\n                                    <div></div>\n                                    :\n                                    <IsFriend \n                                        className=\"\"\n                                        isFriend={isFriend}\n                                        isRequestSent={isRequestSent}\n                                        isRequestReceived={isRequestReceived}\n                                        taskSendFriendRequest={this.taskSendFriendRequest}\n                                        taskAcceptFriendRequest={this.taskAcceptFriendRequest}\n                                    />\n                                }\n                            </div>\n                        }\n                    </div>\n                </div>\n                {isFriend === null\n                    ?\n                    <div></div>\n                    :\n                    (isFriend === true\n                        ?\n                        <div className=\"user__profile-details\">\n                            <div className=\"user__interaction user-interaction\">\n                                <div className=\"interaction__favourites\">\n                                    {favouriteTeams.map(team => {\n                                        return (\n                                            <TeamCard \n                                                className=\"user-interaction__fav-card\" \n                                                taskDisplayTeam={this.taskDisplayTeam}\n                                                strTeamBadge={team.strTeamBadge}\n                                                teamId={team.idTeam} \n                                            />\n                                        )\n                                    })} \n                                </div>\n                                <div className=\"user-interaction__feed-container\">\n                                    <div className=\"user-interaction__feed feed\">\n                                        <div className=\"feed__card\">\n                                            {currentIsProfile\n                                            ?\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={currentUser.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`What is on your mind?`}\n                                            />\n                                            :\n                                            <FeedForm \n                                                className=\"feed__form\"\n                                                onSubmit={this.taskAddPost}\n                                                profileUrl={currentUser.imgUrl}\n                                                feedTitle={`${profileInfo.name}'s Feed`}\n                                                placeholder={`Write something to ${profileInfo.name}...`}\n                                            />\n                                            }\n                                        </div>\n                                        {feed.map(feedContent => {\n                                            return (\n                                                <FeedCard \n                                                    className=\"feed__card\"\n                                                    feedContent={feedContent}\n                                                    feedComments={feedComments}\n                                                    taskTakeToGamePage={this.taskTakeToGamePage}\n                                                    taskAddCommentToPost={this.taskAddCommentToPost}\n                                                    userAvatar={currentUser.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user__updates user-updates\">\n                                <div className=\"user-updates__container\">\n                                    {pastEvents.map(event => {\n                                        return <EventScore event={event} />\n                                    })}\n                                </div>\n                                <div className=\"user-updates__container\">\n                                    {articles.map(article => {\n                                        return (\n                                            <NewsArticle \n                                                className=\"team__news-article\" \n                                                newsArticle={article} \n                                            />\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"user__friends user-friends\">\n                                <div className=\"user-friends__wrapper\">\n                                    <div className=\"user-friends__container\">\n                                        <h3 className=\"friends__title\">Friends</h3>\n                                        {friends.map(friend => {\n                                            return(\n                                                <ProfileImage \n                                                    key={friend.userId}\n                                                    className=\"user-friends__avatar\"\n                                                    imgSrc={friend.imgUrl}\n                                                />\n                                            )\n                                        })}\n                                    </div>\n                                    <div className=\"friends__request-container\">\n                                        <h3 className=\"friends__title\">Requests</h3>\n                                        {requests.map(request => {\n                                            return(\n                                                <Link key={request.requestorId} to={\"/user/\" + request.requestorId}>\n                                                    <ProfileImage \n                                                        key={request.requestorId}\n                                                        className=\"friends__avatar\"\n                                                        imgSrc={request.imgUrl}\n                                                    />\n                                                </Link>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            {detailsEnabled && \n                                <TeamDetails \n                                    team={selectedTeam} \n                                    taskEndDisplayTeam={this.taskEndDisplayTeam}\n                                    taskUpdateFavourites={this.taskUpdateFavourites}\n                                />\n                            }\n                        </div>\n                        :\n                        <div className=\"user__private user-private\">\n                            <div className=\"user-private__wrapper\">\n                                <img className=\"user-private__img\" src={lockIcon} alt=\"lock\"/>\n                                <div className=\"user-private__card\">    \n                                    <h3 className=\"user-private__title\">This Account is Private</h3>\n                                    <p className=\"user-private__text\">Send a friend request to this account to see their details.</p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n                \n                \n            </main>\n        )\n    }\n    \n}\n\nexport default ActualUserPage;"]},"metadata":{},"sourceType":"module"}